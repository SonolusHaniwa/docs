import{_ as p,c as o,e as i,a as n,d as a,b as e,w as l,r,o as d}from"./app-DOik5NaU.js";const u={};function y(g,t){const s=r("RouteLink");return d(),o("div",null,[t[387]||(t[387]=i(`<h1 id="游玩模式基础" tabindex="-1"><a class="header-anchor" href="#游玩模式基础"><span>游玩模式基础</span></a></h1><h2 id="相关概念" tabindex="-1"><a class="header-anchor" href="#相关概念"><span>相关概念</span></a></h2><p>游玩模式，顾名思义，就是可供玩家游玩的模式。</p><p>您可以使用以下指令来编译引擎的游玩模式:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">./sonolus buildcpp play <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="原型回调函数" tabindex="-1"><a class="header-anchor" href="#原型回调函数"><span>原型回调函数</span></a></h2><h3 id="原型定义" tabindex="-1"><a class="header-anchor" href="#原型定义"><span>原型定义</span></a></h3>`,7)),n("p",null,[t[1]||(t[1]=a("名为 ")),t[2]||(t[2]=n("code",null,"*Order",-1)),t[3]||(t[3]=a(" 的 ")),t[4]||(t[4]=n("code",null,"double",-1)),t[5]||(t[5]=a(" 型变量和返回值类型为 ")),t[6]||(t[6]=n("code",null,"SonolusApi",-1)),t[7]||(t[7]=a(" 的函数已在 ")),e(s,{to:"/sonolus.h/basic/2.%20sonolus.html"},{default:l(()=>t[0]||(t[0]=[a("Sonolus 基础")])),_:1,__:[0]}),t[8]||(t[8]=a(" 章节中讲解。以下代码中尾部含有注释的行以及 ")),t[9]||(t[9]=n("code",null,"*Order",-1)),t[10]||(t[10]=a(" 变量和 ")),t[11]||(t[11]=n("code",null,"SonolusApi",-1)),t[12]||(t[12]=a(" 函数是您需要特别注意的，除此之外的行您不需要了解，Sonolus.h 会自动处理他们。"))]),t[388]||(t[388]=i(`<div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token keyword">class</span> <span class="token class-name">Archetype</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span><span class="token operator">:</span></span>
<span class="line">    <span class="token keyword">int</span> id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    VariablesArray<span class="token operator">&lt;</span>EntityMemoryId<span class="token operator">&gt;</span> <span class="token operator">&amp;</span>memory <span class="token operator">=</span> EntityMemory<span class="token punctuation">;</span>                      <span class="token comment">// 实体内存区块，使用 memory[i] 获取偏移为 i 的值。</span></span>
<span class="line">    VariablesArray<span class="token operator">&lt;</span>EntitySharedMemoryId<span class="token operator">&gt;</span> <span class="token operator">&amp;</span>sharedMemory <span class="token operator">=</span> EntitySharedMemory<span class="token punctuation">;</span>    <span class="token comment">// 共享实体内存区块，使用 sharedMemory[i] 获取偏移为 i 的值。</span></span>
<span class="line">    EntityInfoGroup <span class="token operator">&amp;</span>info <span class="token operator">=</span> EntityInfo<span class="token punctuation">;</span>                                         <span class="token comment">// 实体信息区块。</span></span>
<span class="line">    EntityDespawnGroup <span class="token operator">&amp;</span>despawn <span class="token operator">=</span> EntityDespawn<span class="token punctuation">;</span>                                <span class="token comment">// 销毁实体区块，使用 despawn.despawn = 1 销毁实体。</span></span>
<span class="line">    EntityInputGroup <span class="token operator">&amp;</span>input <span class="token operator">=</span> EntityInput<span class="token punctuation">;</span>                                      <span class="token comment">// 实体结果区块。</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span><span class="token operator">:</span></span>
<span class="line">    ArchetypeLifeGroup life <span class="token operator">=</span> ArchetypeLife<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">;</span>                                <span class="token comment">// 原型生命值区块，只能在 preprocess 函数中修改。</span></span>
<span class="line"></span>
<span class="line">    string name <span class="token operator">=</span> <span class="token string">&quot;Default Archetype&quot;</span><span class="token punctuation">;</span>                                          <span class="token comment">// 原型名。</span></span>
<span class="line">    <span class="token keyword">bool</span> hasInput <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                                                      <span class="token comment">// 是否计入 combo。</span></span>
<span class="line">    vector<span class="token operator">&lt;</span>pair<span class="token operator">&lt;</span>string<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token operator">&gt;</span> imports<span class="token punctuation">;</span></span>
<span class="line">    vector<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span> exports<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">double</span> preprocessOrder <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    SonolusApi <span class="token function">preprocess</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">double</span> spawnOrderOrder <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    SonolusApi <span class="token function">spawnOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">double</span> shouldSpawnOrder <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    SonolusApi <span class="token function">shouldSpawn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">double</span> initializeOrder <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    SonolusApi <span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">double</span> updateSequentialOrder <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    SonolusApi <span class="token function">updateSequential</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">double</span> touchOrder <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    SonolusApi <span class="token function">touch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">double</span> updateParallelOrder <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    SonolusApi <span class="token function">updateParallel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">double</span> terminateOrder <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    SonolusApi <span class="token function">terminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一个实体在整个生命周期中有且仅有三种状态: 未激活，已激活和已销毁。</p><h3 id="preprocess" tabindex="-1"><a class="header-anchor" href="#preprocess"><span><code>preprocess</code></span></a></h3><p><code>preprocess</code> 回调函数将在关卡初始化时执行，其目的是为了修改部分区块数据(故 <code>preprocess</code> 回调函数拥有几乎最高的读写权限)。</p><h3 id="spawnorder" tabindex="-1"><a class="header-anchor" href="#spawnorder"><span><code>spawnOrder</code></span></a></h3><p><code>spawnOrder</code> 回调函数将在关卡初始化时执行，其返回值将作为实体激活顺序。该值越小，意味着实体将会被更早激活，反之则会更晚激活。</p><p>实体激活顺序可在游戏暂停时的 <code>Spawn Queue</code> 中查看(需要在设置中开启调试模式)。</p><h3 id="shouldspawn" tabindex="-1"><a class="header-anchor" href="#shouldspawn"><span><code>shouldSpawn</code></span></a></h3><p><code>shouldSpawn</code> 回调函数将在实体未激活前的每一更新周期执行，其返回值将作为是否激活实体的依据。该值为 <code>true</code> 时，意味着实体将在该更新周期被激活，并且后续更新周期中将不再调用该回调函数，反之实体将不会在该更新周期中激活。</p><p>实体激活状态可在游戏暂停时的 <code>Spawn Queue</code> 中查看(需要在设置中开启调试模式)。</p><p>当前已激活实体可在游戏暂停时的 <code>Active Entities</code> 中查看(需要在设置中开启调试模式)。</p><h3 id="initialize" tabindex="-1"><a class="header-anchor" href="#initialize"><span><code>initialize</code></span></a></h3><p><code>initialize</code> 回调函数将在 <code>shouldSpawn</code> 返回值为 <code>true</code> 的更新周期执行，并且只会被调用一次，其目的是为了在实体激活前初始化相关变量。</p><h3 id="updatesequential" tabindex="-1"><a class="header-anchor" href="#updatesequential"><span><code>updateSequential</code></span></a></h3><p><code>updateSequential</code> 回调函数将在实体激活时的每一更新周期执行，其目的是为了顺序更新实体变量或执行相关函数。</p><h3 id="touch" tabindex="-1"><a class="header-anchor" href="#touch"><span><code>touch</code></span></a></h3><p><code>touch</code> 回调函数将在实体激活时有用户触摸的更新周期中执行，其目的是为了处理用户触摸信息。</p><p>用户触摸可在游戏暂停时的 <code>Runtime Touch Array</code> 中查看(需要在设置中开启调试模式)。</p><h3 id="updateparallel" tabindex="-1"><a class="header-anchor" href="#updateparallel"><span><code>updateParallel</code></span></a></h3><p><code>updateParallel</code> 回调函数将在实体激活时的每一更新周期执行，其目的是为了平行更新实体变量或执行相关函数。</p><p>对于引擎开发者，您应该将大量非必要代码置于该回调函数而不是 <code>updateSequential</code> 回调函数以加快 Sonolus 的运行速度，从而提高运行帧率，提升用户体验。</p><h3 id="terminate" tabindex="-1"><a class="header-anchor" href="#terminate"><span><code>terminate</code></span></a></h3><p><code>terminate</code> 回调函数将在 <code>despawn.despawn</code> 被设置为 <code>true</code> 的更新周期中执行，并且只会被调用一次，其目的是为了销毁或更新部分变量或执行部分操作。该回调函数运行完后，该实体将会被标记为已销毁。</p><h3 id="调用顺序" tabindex="-1"><a class="header-anchor" href="#调用顺序"><span>调用顺序</span></a></h3><p>除去 <code>preprocess</code>, <code>spawnOrder</code> 回调函数，剩余回调函数将按照本文介绍的顺序先后进行调用。</p><p>回调函数执行的伪代码如下(实际这并不是 Sonolus 的源代码):</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token keyword">int</span> state <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 0 为未激活, 1 为已激活, 2 为已销毁</span></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">switch</span> <span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">shouldSpawn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                state <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">updateSequential</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>touchCount<span class="token punctuation">)</span> <span class="token function">touch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token function">updateParallel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">terminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="样例" tabindex="-1"><a class="header-anchor" href="#样例"><span>样例</span></a></h3><p>以下代码展示了原型的基本定义及使用方法。</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token keyword">class</span> <span class="token class-name">Test</span><span class="token operator">:</span> <span class="token base-clause"><span class="token keyword">public</span> <span class="token class-name">Archetype</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span><span class="token operator">:</span></span>
<span class="line"></span>
<span class="line">    string name <span class="token operator">=</span> <span class="token string">&quot;Test Archetype&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 原型名定义。</span></span>
<span class="line">    <span class="token keyword">bool</span> hasInput <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>           <span class="token comment">// 是否计入 combo</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 定义实体数据</span></span>
<span class="line">    <span class="token function">defineImportDetailed</span><span class="token punctuation">(</span>beat<span class="token punctuation">,</span> EngineArchetypeDataName<span class="token punctuation">.</span>Beat<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">defineImport</span><span class="token punctuation">(</span>lane<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 定义导出数据</span></span>
<span class="line">    <span class="token function">defineExport</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">defineExportDetailed</span><span class="token punctuation">(</span>accuracy<span class="token punctuation">,</span> EngineArchetypeDataName<span class="token punctuation">.</span>Accuracy<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 定义原型内全局变量</span></span>
<span class="line">    var a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 定义实体共享变量</span></span>
<span class="line">    var d <span class="token operator">=</span> <span class="token function">var</span><span class="token punctuation">(</span>EntitySharedMemoryId<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    var e <span class="token operator">=</span> <span class="token function">var</span><span class="token punctuation">(</span>EntitySharedMemoryId<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">double</span> preprocessOrder <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 定义回调函数顺序</span></span>
<span class="line">    SonolusApi <span class="token function">preprocess</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">// 回调函数</span></span>
<span class="line">        <span class="token comment">// 使用实体数据</span></span>
<span class="line">        var f <span class="token operator">=</span> beat <span class="token operator">*</span> lane<span class="token punctuation">;</span></span>
<span class="line">        var g <span class="token operator">=</span> beat <span class="token operator">/</span> lane<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 当然也可以不指定回调函数顺序，其值默认为 0</span></span>
<span class="line">    SonolusApi <span class="token function">updateSequential</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 回调函数</span></span>
<span class="line">        <span class="token comment">// 导出实体数据</span></span>
<span class="line">        var f <span class="token operator">=</span> beat <span class="token operator">*</span> lane<span class="token punctuation">;</span></span>
<span class="line">        var g <span class="token operator">=</span> beat <span class="token operator">/</span> lane<span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">ExportValue</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">ExportValue</span><span class="token punctuation">(</span>accuracy<span class="token punctuation">,</span> g<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这只是一个最简单的原型样例，之后您将会逐步学习多个复杂原型及一个完整引擎的编写过程。</p><h2 id="区块" tabindex="-1"><a class="header-anchor" href="#区块"><span>区块</span></a></h2><p>区块相关知识已于前序章节讲解，在此不多赘述。</p><p>有链接指向的区块表明为之前介绍过的较重要的区块，您可以点击链接快速跳转到对应界面；没有链接指向的区块表明为不太重要的区块，您可以不用了解。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>由于 Sonolus 版本更新，本页读写权限表未必为最新版本。如果本页内容与官网内容有所出入，请以<a href="https://wiki.sonolus.com/engine-specs/play-blocks/overview" target="_blank" rel="noopener noreferrer">官网</a>为准。</p></div><h3 id="读取权限表" tabindex="-1"><a class="header-anchor" href="#读取权限表"><span>读取权限表</span></a></h3>`,36)),n("table",null,[t[199]||(t[199]=n("thead",null,[n("tr",null,[n("th",null,"区块名"),n("th",{style:{"text-align":"center"}},[n("a",{href:"#preprocess"},[n("code",null,"preprocess")])]),n("th",{style:{"text-align":"center"}},[n("a",{href:"#spawnorder"},[n("code",null,"spawnOrder")])]),n("th",{style:{"text-align":"center"}},[n("a",{href:"#shouldspawn"},[n("code",null,"shouldSpawn")])]),n("th",{style:{"text-align":"center"}},[n("a",{href:"#initialize"},[n("code",null,"initialize")])]),n("th",{style:{"text-align":"center"}},[n("a",{href:"#updatesequential"},[n("code",null,"updateSequential")])]),n("th",{style:{"text-align":"center"}},[n("a",{href:"#touch"},[n("code",null,"touch")])]),n("th",{style:{"text-align":"center"}},[n("a",{href:"#updateparallel"},[n("code",null,"updateParallel")])]),n("th",{style:{"text-align":"center"}},[n("a",{href:"#terminate"},[n("code",null,"terminate")])])])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#runtimeenvironment"},{default:l(()=>t[13]||(t[13]=[n("code",null,"RuntimeEnvironment",-1)])),_:1,__:[13]})]),t[14]||(t[14]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[15]||(t[15]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[16]||(t[16]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[17]||(t[17]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[18]||(t[18]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[19]||(t[19]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[20]||(t[20]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[21]||(t[21]=n("td",{style:{"text-align":"center"}},"✔",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#runtimeupdate"},{default:l(()=>t[22]||(t[22]=[n("code",null,"RuntimeUpdate",-1)])),_:1,__:[22]})]),t[23]||(t[23]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[24]||(t[24]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[25]||(t[25]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[26]||(t[26]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[27]||(t[27]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[28]||(t[28]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[29]||(t[29]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[30]||(t[30]=n("td",{style:{"text-align":"center"}},"✔",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#runtimetoucharray"},{default:l(()=>t[31]||(t[31]=[n("code",null,"RuntimeTouchArray",-1)])),_:1,__:[31]})]),t[32]||(t[32]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[33]||(t[33]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[34]||(t[34]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[35]||(t[35]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[36]||(t[36]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[37]||(t[37]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[38]||(t[38]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[39]||(t[39]=n("td",{style:{"text-align":"center"}},"✔",-1))]),t[193]||(t[193]=n("tr",null,[n("td",null,[n("code",null,"RuntimeSkinTransform")]),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔")],-1)),t[194]||(t[194]=n("tr",null,[n("td",null,[n("code",null,"RuntimeParticleTransform")]),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔")],-1)),t[195]||(t[195]=n("tr",null,[n("td",null,[n("code",null,"RuntimeBackground")]),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔")],-1)),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#runtimeui"},{default:l(()=>t[40]||(t[40]=[n("code",null,"RuntimeUI",-1)])),_:1,__:[40]})]),t[41]||(t[41]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[42]||(t[42]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[43]||(t[43]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[44]||(t[44]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[45]||(t[45]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[46]||(t[46]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[47]||(t[47]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[48]||(t[48]=n("td",{style:{"text-align":"center"}},"✔",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#runtimeuiconfiguration"},{default:l(()=>t[49]||(t[49]=[n("code",null,"RuntimeUIConfiguration",-1)])),_:1,__:[49]})]),t[50]||(t[50]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[51]||(t[51]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[52]||(t[52]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[53]||(t[53]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[54]||(t[54]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[55]||(t[55]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[56]||(t[56]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[57]||(t[57]=n("td",{style:{"text-align":"center"}},"✔",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#levelmemory-tutorialmemory-previewdata"},{default:l(()=>t[58]||(t[58]=[n("code",null,"LevelMemory",-1)])),_:1,__:[58]})]),t[59]||(t[59]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[60]||(t[60]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[61]||(t[61]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[62]||(t[62]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[63]||(t[63]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[64]||(t[64]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[65]||(t[65]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[66]||(t[66]=n("td",{style:{"text-align":"center"}},"✔",-1))]),t[196]||(t[196]=n("tr",null,[n("td",null,[n("code",null,"LevelData")]),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔")],-1)),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#leveloption-previewoption"},{default:l(()=>t[67]||(t[67]=[n("code",null,"LevelOption",-1)])),_:1,__:[67]})]),t[68]||(t[68]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[69]||(t[69]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[70]||(t[70]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[71]||(t[71]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[72]||(t[72]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[73]||(t[73]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[74]||(t[74]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[75]||(t[75]=n("td",{style:{"text-align":"center"}},"✔",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#levelbucket"},{default:l(()=>t[76]||(t[76]=[n("code",null,"LevelBucket",-1)])),_:1,__:[76]})]),t[77]||(t[77]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[78]||(t[78]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[79]||(t[79]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[80]||(t[80]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[81]||(t[81]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[82]||(t[82]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[83]||(t[83]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[84]||(t[84]=n("td",{style:{"text-align":"center"}},"✔",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#levelscore"},{default:l(()=>t[85]||(t[85]=[n("code",null,"LevelScore",-1)])),_:1,__:[85]})]),t[86]||(t[86]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[87]||(t[87]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[88]||(t[88]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[89]||(t[89]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[90]||(t[90]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[91]||(t[91]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[92]||(t[92]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[93]||(t[93]=n("td",{style:{"text-align":"center"}},"✔",-1))]),t[197]||(t[197]=n("tr",null,[n("td",null,[n("code",null,"LevelLife")]),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔")],-1)),t[198]||(t[198]=n("tr",null,[n("td",null,[n("code",null,"EngineRom")]),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔")],-1)),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entitymemory"},{default:l(()=>t[94]||(t[94]=[n("code",null,"EntityMemory",-1)])),_:1,__:[94]})]),t[95]||(t[95]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[96]||(t[96]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[97]||(t[97]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[98]||(t[98]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[99]||(t[99]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[100]||(t[100]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[101]||(t[101]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[102]||(t[102]=n("td",{style:{"text-align":"center"}},"✔",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entitydata"},{default:l(()=>t[103]||(t[103]=[n("code",null,"EntityData",-1)])),_:1,__:[103]})]),t[104]||(t[104]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[105]||(t[105]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[106]||(t[106]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[107]||(t[107]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[108]||(t[108]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[109]||(t[109]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[110]||(t[110]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[111]||(t[111]=n("td",{style:{"text-align":"center"}},"✔",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entitysharedmemory"},{default:l(()=>t[112]||(t[112]=[n("code",null,"EntitySharedMemory",-1)])),_:1,__:[112]})]),t[113]||(t[113]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[114]||(t[114]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[115]||(t[115]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[116]||(t[116]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[117]||(t[117]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[118]||(t[118]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[119]||(t[119]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[120]||(t[120]=n("td",{style:{"text-align":"center"}},"✔",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entityinfo"},{default:l(()=>t[121]||(t[121]=[n("code",null,"EntityInfo",-1)])),_:1,__:[121]})]),t[122]||(t[122]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[123]||(t[123]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[124]||(t[124]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[125]||(t[125]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[126]||(t[126]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[127]||(t[127]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[128]||(t[128]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[129]||(t[129]=n("td",{style:{"text-align":"center"}},"✔",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entitydespawn"},{default:l(()=>t[130]||(t[130]=[n("code",null,"EntityDespawn",-1)])),_:1,__:[130]})]),t[131]||(t[131]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[132]||(t[132]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[133]||(t[133]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[134]||(t[134]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[135]||(t[135]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[136]||(t[136]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[137]||(t[137]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[138]||(t[138]=n("td",{style:{"text-align":"center"}},"✔",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entityinput"},{default:l(()=>t[139]||(t[139]=[n("code",null,"EntityInput",-1)])),_:1,__:[139]})]),t[140]||(t[140]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[141]||(t[141]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[142]||(t[142]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[143]||(t[143]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[144]||(t[144]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[145]||(t[145]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[146]||(t[146]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[147]||(t[147]=n("td",{style:{"text-align":"center"}},"✔",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entitydataarray"},{default:l(()=>t[148]||(t[148]=[n("code",null,"EntityDataArray",-1)])),_:1,__:[148]})]),t[149]||(t[149]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[150]||(t[150]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[151]||(t[151]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[152]||(t[152]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[153]||(t[153]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[154]||(t[154]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[155]||(t[155]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[156]||(t[156]=n("td",{style:{"text-align":"center"}},"✔",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entitysharedmemoryarray"},{default:l(()=>t[157]||(t[157]=[n("code",null,"EntitySharedMemoryArray",-1)])),_:1,__:[157]})]),t[158]||(t[158]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[159]||(t[159]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[160]||(t[160]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[161]||(t[161]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[162]||(t[162]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[163]||(t[163]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[164]||(t[164]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[165]||(t[165]=n("td",{style:{"text-align":"center"}},"✔",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entityinfoarray"},{default:l(()=>t[166]||(t[166]=[n("code",null,"EntityInfoArray",-1)])),_:1,__:[166]})]),t[167]||(t[167]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[168]||(t[168]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[169]||(t[169]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[170]||(t[170]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[171]||(t[171]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[172]||(t[172]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[173]||(t[173]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[174]||(t[174]=n("td",{style:{"text-align":"center"}},"✔",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#archetypelife"},{default:l(()=>t[175]||(t[175]=[n("code",null,"ArchetypeLife",-1)])),_:1,__:[175]})]),t[176]||(t[176]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[177]||(t[177]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[178]||(t[178]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[179]||(t[179]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[180]||(t[180]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[181]||(t[181]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[182]||(t[182]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[183]||(t[183]=n("td",{style:{"text-align":"center"}},"✔",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#temporarymemory"},{default:l(()=>t[184]||(t[184]=[n("code",null,"TemporaryMemory",-1)])),_:1,__:[184]})]),t[185]||(t[185]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[186]||(t[186]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[187]||(t[187]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[188]||(t[188]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[189]||(t[189]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[190]||(t[190]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[191]||(t[191]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[192]||(t[192]=n("td",{style:{"text-align":"center"}},"✔",-1))])])]),t[389]||(t[389]=n("h3",{id:"修改权限表",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#修改权限表"},[n("span",null,"修改权限表")])],-1)),n("table",null,[t[386]||(t[386]=n("thead",null,[n("tr",null,[n("th",null,"区块名"),n("th",{style:{"text-align":"center"}},[n("a",{href:"#preprocess"},[n("code",null,"preprocess")])]),n("th",{style:{"text-align":"center"}},[n("a",{href:"#spawnorder"},[n("code",null,"spawnOrder")])]),n("th",{style:{"text-align":"center"}},[n("a",{href:"#shouldspawn"},[n("code",null,"shouldSpawn")])]),n("th",{style:{"text-align":"center"}},[n("a",{href:"#initialize"},[n("code",null,"initialize")])]),n("th",{style:{"text-align":"center"}},[n("a",{href:"#updatesequential"},[n("code",null,"updateSequential")])]),n("th",{style:{"text-align":"center"}},[n("a",{href:"#touch"},[n("code",null,"touch")])]),n("th",{style:{"text-align":"center"}},[n("a",{href:"#updateparallel"},[n("code",null,"updateParallel")])]),n("th",{style:{"text-align":"center"}},[n("a",{href:"#terminate"},[n("code",null,"terminate")])])])],-1)),n("tbody",null,[n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#runtimeenvironment"},{default:l(()=>t[200]||(t[200]=[n("code",null,"RuntimeEnvironment",-1)])),_:1,__:[200]})]),t[201]||(t[201]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[202]||(t[202]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[203]||(t[203]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[204]||(t[204]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[205]||(t[205]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[206]||(t[206]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[207]||(t[207]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[208]||(t[208]=n("td",{style:{"text-align":"center"}},"❌",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#runtimeupdate"},{default:l(()=>t[209]||(t[209]=[n("code",null,"RuntimeUpdate",-1)])),_:1,__:[209]})]),t[210]||(t[210]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[211]||(t[211]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[212]||(t[212]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[213]||(t[213]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[214]||(t[214]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[215]||(t[215]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[216]||(t[216]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[217]||(t[217]=n("td",{style:{"text-align":"center"}},"❌",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#runtimetoucharray"},{default:l(()=>t[218]||(t[218]=[n("code",null,"RuntimeTouchArray",-1)])),_:1,__:[218]})]),t[219]||(t[219]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[220]||(t[220]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[221]||(t[221]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[222]||(t[222]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[223]||(t[223]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[224]||(t[224]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[225]||(t[225]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[226]||(t[226]=n("td",{style:{"text-align":"center"}},"❌",-1))]),t[380]||(t[380]=n("tr",null,[n("td",null,[n("code",null,"RuntimeSkinTransform")]),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌")],-1)),t[381]||(t[381]=n("tr",null,[n("td",null,[n("code",null,"RuntimeParticleTransform")]),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌")],-1)),t[382]||(t[382]=n("tr",null,[n("td",null,[n("code",null,"RuntimeBackground")]),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌")],-1)),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#runtimeui"},{default:l(()=>t[227]||(t[227]=[n("code",null,"RuntimeUI",-1)])),_:1,__:[227]})]),t[228]||(t[228]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[229]||(t[229]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[230]||(t[230]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[231]||(t[231]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[232]||(t[232]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[233]||(t[233]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[234]||(t[234]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[235]||(t[235]=n("td",{style:{"text-align":"center"}},"❌",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#runtimeuiconfiguration"},{default:l(()=>t[236]||(t[236]=[n("code",null,"RuntimeUIConfiguration",-1)])),_:1,__:[236]})]),t[237]||(t[237]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[238]||(t[238]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[239]||(t[239]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[240]||(t[240]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[241]||(t[241]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[242]||(t[242]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[243]||(t[243]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[244]||(t[244]=n("td",{style:{"text-align":"center"}},"❌",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#levelmemory-tutorialmemory-previewdata"},{default:l(()=>t[245]||(t[245]=[n("code",null,"LevelMemory",-1)])),_:1,__:[245]})]),t[246]||(t[246]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[247]||(t[247]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[248]||(t[248]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[249]||(t[249]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[250]||(t[250]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[251]||(t[251]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[252]||(t[252]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[253]||(t[253]=n("td",{style:{"text-align":"center"}},"❌",-1))]),t[383]||(t[383]=n("tr",null,[n("td",null,[n("code",null,"LevelData")]),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌")],-1)),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#leveloption-previewoption"},{default:l(()=>t[254]||(t[254]=[n("code",null,"LevelOption",-1)])),_:1,__:[254]})]),t[255]||(t[255]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[256]||(t[256]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[257]||(t[257]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[258]||(t[258]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[259]||(t[259]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[260]||(t[260]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[261]||(t[261]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[262]||(t[262]=n("td",{style:{"text-align":"center"}},"❌",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#levelbucket"},{default:l(()=>t[263]||(t[263]=[n("code",null,"LevelBucket",-1)])),_:1,__:[263]})]),t[264]||(t[264]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[265]||(t[265]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[266]||(t[266]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[267]||(t[267]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[268]||(t[268]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[269]||(t[269]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[270]||(t[270]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[271]||(t[271]=n("td",{style:{"text-align":"center"}},"❌",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#levelscore"},{default:l(()=>t[272]||(t[272]=[n("code",null,"LevelScore",-1)])),_:1,__:[272]})]),t[273]||(t[273]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[274]||(t[274]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[275]||(t[275]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[276]||(t[276]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[277]||(t[277]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[278]||(t[278]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[279]||(t[279]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[280]||(t[280]=n("td",{style:{"text-align":"center"}},"❌",-1))]),t[384]||(t[384]=n("tr",null,[n("td",null,[n("code",null,"LevelLife")]),n("td",{style:{"text-align":"center"}},"✔"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌")],-1)),t[385]||(t[385]=n("tr",null,[n("td",null,[n("code",null,"EngineRom")]),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌"),n("td",{style:{"text-align":"center"}},"❌")],-1)),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entitymemory"},{default:l(()=>t[281]||(t[281]=[n("code",null,"EntityMemory",-1)])),_:1,__:[281]})]),t[282]||(t[282]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[283]||(t[283]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[284]||(t[284]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[285]||(t[285]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[286]||(t[286]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[287]||(t[287]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[288]||(t[288]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[289]||(t[289]=n("td",{style:{"text-align":"center"}},"✔",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entitydata"},{default:l(()=>t[290]||(t[290]=[n("code",null,"EntityData",-1)])),_:1,__:[290]})]),t[291]||(t[291]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[292]||(t[292]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[293]||(t[293]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[294]||(t[294]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[295]||(t[295]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[296]||(t[296]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[297]||(t[297]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[298]||(t[298]=n("td",{style:{"text-align":"center"}},"❌",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entitysharedmemory"},{default:l(()=>t[299]||(t[299]=[n("code",null,"EntitySharedMemory",-1)])),_:1,__:[299]})]),t[300]||(t[300]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[301]||(t[301]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[302]||(t[302]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[303]||(t[303]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[304]||(t[304]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[305]||(t[305]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[306]||(t[306]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[307]||(t[307]=n("td",{style:{"text-align":"center"}},"❌",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entityinfo"},{default:l(()=>t[308]||(t[308]=[n("code",null,"EntityInfo",-1)])),_:1,__:[308]})]),t[309]||(t[309]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[310]||(t[310]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[311]||(t[311]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[312]||(t[312]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[313]||(t[313]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[314]||(t[314]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[315]||(t[315]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[316]||(t[316]=n("td",{style:{"text-align":"center"}},"❌",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entitydespawn"},{default:l(()=>t[317]||(t[317]=[n("code",null,"EntityDespawn",-1)])),_:1,__:[317]})]),t[318]||(t[318]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[319]||(t[319]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[320]||(t[320]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[321]||(t[321]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[322]||(t[322]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[323]||(t[323]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[324]||(t[324]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[325]||(t[325]=n("td",{style:{"text-align":"center"}},"✔",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entityinput"},{default:l(()=>t[326]||(t[326]=[n("code",null,"EntityInput",-1)])),_:1,__:[326]})]),t[327]||(t[327]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[328]||(t[328]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[329]||(t[329]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[330]||(t[330]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[331]||(t[331]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[332]||(t[332]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[333]||(t[333]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[334]||(t[334]=n("td",{style:{"text-align":"center"}},"✔",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entitydataarray"},{default:l(()=>t[335]||(t[335]=[n("code",null,"EntityDataArray",-1)])),_:1,__:[335]})]),t[336]||(t[336]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[337]||(t[337]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[338]||(t[338]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[339]||(t[339]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[340]||(t[340]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[341]||(t[341]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[342]||(t[342]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[343]||(t[343]=n("td",{style:{"text-align":"center"}},"❌",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entitysharedmemoryarray"},{default:l(()=>t[344]||(t[344]=[n("code",null,"EntitySharedMemoryArray",-1)])),_:1,__:[344]})]),t[345]||(t[345]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[346]||(t[346]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[347]||(t[347]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[348]||(t[348]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[349]||(t[349]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[350]||(t[350]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[351]||(t[351]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[352]||(t[352]=n("td",{style:{"text-align":"center"}},"❌",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entityinfoarray"},{default:l(()=>t[353]||(t[353]=[n("code",null,"EntityInfoArray",-1)])),_:1,__:[353]})]),t[354]||(t[354]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[355]||(t[355]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[356]||(t[356]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[357]||(t[357]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[358]||(t[358]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[359]||(t[359]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[360]||(t[360]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[361]||(t[361]=n("td",{style:{"text-align":"center"}},"❌",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#archetypelife"},{default:l(()=>t[362]||(t[362]=[n("code",null,"ArchetypeLife",-1)])),_:1,__:[362]})]),t[363]||(t[363]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[364]||(t[364]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[365]||(t[365]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[366]||(t[366]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[367]||(t[367]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[368]||(t[368]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[369]||(t[369]=n("td",{style:{"text-align":"center"}},"❌",-1)),t[370]||(t[370]=n("td",{style:{"text-align":"center"}},"❌",-1))]),n("tr",null,[n("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#temporarymemory"},{default:l(()=>t[371]||(t[371]=[n("code",null,"TemporaryMemory",-1)])),_:1,__:[371]})]),t[372]||(t[372]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[373]||(t[373]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[374]||(t[374]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[375]||(t[375]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[376]||(t[376]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[377]||(t[377]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[378]||(t[378]=n("td",{style:{"text-align":"center"}},"✔",-1)),t[379]||(t[379]=n("td",{style:{"text-align":"center"}},"✔",-1))])])])])}const k=p(u,[["render",y]]),m=JSON.parse('{"path":"/sonolus.h/play/1.%20basic.html","title":"游玩模式基础","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1746345404000,"contributors":[{"name":"LittleYang0531","username":"LittleYang0531","email":"littleyang0531@cau.edu.cn","commits":3,"url":"https://github.com/LittleYang0531"}],"changelog":[{"hash":"e13903a7cea295433f4bca82cc81c410ec333e8c","time":1746345404000,"email":"littleyang0531@cau.edu.cn","author":"LittleYang0531","message":"Update"},{"hash":"dcbb26ffce1c79b5898039889207b9a274cdab0b","time":1745767057000,"email":"littleyang0531@cau.edu.cn","author":"LittleYang0531","message":"Update"},{"hash":"cf41bee41753afa07d0ab3cd62644a45489fffce","time":1745078694000,"email":"littleyang0531@cau.edu.cn","author":"LittleYang0531","message":"Update"}]},"filePathRelative":"sonolus.h/play/1. basic.md"}');export{k as comp,m as data};

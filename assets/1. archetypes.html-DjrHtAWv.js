import{_ as a,c as s,e,o as t}from"./app-Tm_cs4D4.js";const p={};function l(o,n){return t(),s("div",null,n[0]||(n[0]=[e(`<h1 id="原型和实体" tabindex="-1"><a class="header-anchor" href="#原型和实体"><span>原型和实体</span></a></h1><p>在本章中，您将会学习到:</p><ul><li>原型的概念</li><li>编写第一个原型</li><li>实体的概念</li></ul><h2 id="原型" tabindex="-1"><a class="header-anchor" href="#原型"><span>原型</span></a></h2><p>原型是一种由引擎定义的实体的抽象概念。</p><p>在本章中，我们的引擎将会有以下四种原型: <code>Initialization</code>, <code>InputManager</code>, <code>Stage</code> 以及 <code>Note</code>。其中，<code>Initialization</code> 负责对关卡进行初始化; <code>InputManager</code> 负责管理用户输入; <code>Stage</code> 原型负责管理用户与舞台的交互以及舞台渲染; 最后，<code>Hote</code> 负责管理用户与音符的交互以及音符的渲染。</p><p>注意到一种原型代表着许多实体的抽象概念。比如说，在一个关卡中可能有 <code>100</code> 个音符，它们在某些地方有所不同(比如生成时间不同或者击打时间不同)，但它们都属于 <code>Note</code> 原型。</p><p>在面向对象的编程语言中，一种原型由类来表示。</p><p>使用 Sonolus.h，一种原型由 C++ 类来表示，例如 <code>Stage</code> 类的代码如下:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="/engine/play/Stage.cpp"><span>/engine/play/Stage.cpp</span></div><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Stage</span><span class="token operator">:</span> <span class="token base-clause"><span class="token keyword">public</span> <span class="token class-name">Archetype</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span><span class="token operator">:</span></span>
<span class="line"></span>
<span class="line">    string name <span class="token operator">=</span> <span class="token string">&quot;Stage&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 设置原型名</span></span>
<span class="line">    <span class="token keyword">bool</span> hasInput <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    SonolusApi <span class="token function">spawnOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    SonolusApi <span class="token function">shouldSpawn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">        <span class="token keyword">return</span> EntityInfoArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">==</span> EntityState<span class="token punctuation">.</span>Despawned<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    SonolusApi <span class="token function">updateParallel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        FUNCBEGIN</span>
<span class="line">        <span class="token function">Debuglog</span><span class="token punctuation">(</span>times<span class="token punctuation">.</span>now<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> VOID<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="实体" tabindex="-1"><a class="header-anchor" href="#实体"><span>实体</span></a></h2><p>实体是由关卡定义的原型的示例。</p><p>不同的关卡可能使用相同的引擎，不同的玩法是由不同的实体定义的。举个例子，一个关卡可能有一个 <code>Initialization</code> 实体，一个 <code>Stage</code> 实体，以及 50 个 <code>Note</code> 实体; 而另一个关卡除了有 100 个 <code>Note</code> 实体外，与前一个关卡几乎相同。</p><p>在面向对象的编程语言中，一个实体是类的一个实例。</p><p>Sonolus.h 与官方提供的 Sonolus.js 相比，不仅能够编写引擎，而且还能够创建测试关卡，以及引擎所需的全部资源(粒子效果除外)，这些都会在后面的章节中一一讲到。</p>`,15)]))}const i=a(p,[["render",l]]),u=JSON.parse('{"path":"/sonolus.h/play/1.%20archetypes.html","title":"原型和实体","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1745035621000,"contributors":[{"name":"LittleYang0531","username":"LittleYang0531","email":"“littleyang0531@outlook.com”","commits":4,"url":"https://github.com/LittleYang0531"}],"changelog":[{"hash":"570216e19854d31872ac0be244ab299f8df2a983","time":1745035621000,"email":"littleyang0531@cau.edu.cn","author":"LittleYang0531","message":"Update"},{"hash":"726af6fc9438d19f7fb5847bfcba9eb4454ab8ca","time":1720451095000,"email":"“littleyang0531@outlook.com”","author":"LittleYang0531","message":"Update sth"},{"hash":"307d2a220f7bba82bd2e711c214715b8253a1908","time":1720416884000,"email":"“littleyang0531@outlook.com”","author":"LittleYang0531","message":"Add tutorial 01"},{"hash":"bb421886456aeed8e99566d85bb38583f372bfdb","time":1720104934000,"email":"“littleyang0531@outlook.com”","author":"LittleYang0531","message":"Update"}]},"filePathRelative":"sonolus.h/play/1. archetypes.md"}');export{i as comp,u as data};

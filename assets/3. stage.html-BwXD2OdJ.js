import{_ as s,c as a,e,o as p}from"./app-DWWHx01N.js";const t={};function l(c,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h1 id="舞台" tabindex="-1"><a class="header-anchor" href="#舞台"><span>舞台</span></a></h1><p>在本章中，您将会学习到:</p><ul><li>舞台原型的设置</li><li>皮肤精灵的声明</li><li>如何绘制面板</li></ul><h2 id="舞台原型" tabindex="-1"><a class="header-anchor" href="#舞台原型"><span>舞台原型</span></a></h2><p>让我们首先设置舞台原型：</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="/engine/preview/Stage.cpp"><span>/engine/preview/Stage.cpp</span></div><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Stage</span><span class="token operator">:</span> <span class="token base-clause"><span class="token keyword">public</span> <span class="token class-name">Archetype</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span><span class="token operator">:</span></span>
<span class="line"></span>
<span class="line">    string name <span class="token operator">=</span> <span class="token string">&quot;My Stage&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="code-block-with-title"><div class="code-block-title-bar" data-title="/engine/engine.cpp"><span>/engine/engine.cpp</span></div><div class="language-diff line-numbers-mode" data-highlighter="prismjs" data-ext="diff"><pre><code><span class="line">// ...</span>
<span class="line"></span>
<span class="line">#ifdef preview</span>
<span class="line">using namespace previewData;</span>
<span class="line">#include&quot;preview/Initialization.cpp&quot;</span>
<span class="line"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> #include&quot;preview/Stage.cpp&quot;</span>
<span class="line"></span></span>#elif watch</span>
<span class="line"></span>
<span class="line">// ...</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="code-block-with-title"><div class="code-block-title-bar" data-title="/main.cpp"><span>/main.cpp</span></div><div class="language-diff line-numbers-mode" data-highlighter="prismjs" data-ext="diff"><pre><code><span class="line">// ...</span>
<span class="line"></span>
<span class="line">#ifdef preview</span>
<span class="line"><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   buffer data, configuration;</span>
<span class="line"></span><span class="token prefix unchanged"> </span><span class="token line">   build&lt;</span>
<span class="line"></span><span class="token prefix unchanged"> </span><span class="token line">       // Replace with your archetypes here</span>
<span class="line"></span><span class="token prefix unchanged"> </span><span class="token line">       Initialization,</span>
<span class="line"></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">       Stage</span>
<span class="line"></span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   &gt;(configuration, data);</span>
<span class="line"></span></span></span>
<span class="line">// ...</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="声明" tabindex="-1"><a class="header-anchor" href="#声明"><span>声明</span></a></h2><p>即使在游玩模式中，我们的舞台只有一条没有轨道或舞台的判定线，但在预览模式中，绘制一条是最好的选择，这样玩家能够看到每一个面板。我们将使用标准舞台精灵：</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="/engine/skins.cpp"><span>/engine/skins.cpp</span></div><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Sprites</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">public</span><span class="token operator">:</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line">    <span class="token keyword">int</span> stageMiddle <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">int</span> stageLeftBorder <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">int</span> stageRightBorder <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span>Sprites<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">auto</span> skins <span class="token operator">=</span> defineSkins<span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token class-name">Sprites</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line">    <span class="token punctuation">{</span> SkinSpriteName<span class="token punctuation">.</span>StageMiddle<span class="token punctuation">,</span> Sprites<span class="token punctuation">.</span>stageMiddle <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span> SkinSpriteName<span class="token punctuation">.</span>StageLeftBorder<span class="token punctuation">,</span> Sprites<span class="token punctuation">.</span>stageLeftBorder <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span> SkinSpriteName<span class="token punctuation">.</span>StageRightBorder<span class="token punctuation">,</span> Sprites<span class="token punctuation">.</span>stageRightBorder <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="绘制" tabindex="-1"><a class="header-anchor" href="#绘制"><span>绘制</span></a></h2><p>绘制面板就是简单地循环面板数量并对每个面板进行绘制：</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="/engine/preview/Stage.cpp"><span>/engine/preview/Stage.cpp</span></div><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Stage</span><span class="token operator">:</span> <span class="token base-clause"><span class="token keyword">public</span> <span class="token class-name">Archetype</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line">    SonolusApi <span class="token function">renderPanels</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        FUNCBEGIN</span>
<span class="line">        <span class="token function">FOR</span> <span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> panel<span class="token punctuation">.</span>count<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            var x <span class="token operator">=</span> i <span class="token operator">*</span> panel<span class="token punctuation">.</span>w <span class="token operator">*</span> screen<span class="token punctuation">.</span>h <span class="token operator">/</span> <span class="token number">20</span><span class="token punctuation">;</span></span>
<span class="line">            var b <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">*</span> panel<span class="token punctuation">.</span>h <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> t <span class="token operator">=</span> panel<span class="token punctuation">.</span>h <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">            var l1 <span class="token operator">=</span> x <span class="token operator">-</span> <span class="token number">3.5</span> <span class="token operator">*</span> screen<span class="token punctuation">.</span>h <span class="token operator">/</span> <span class="token number">20</span> <span class="token operator">+</span> screen<span class="token punctuation">.</span>l<span class="token punctuation">,</span> l2 <span class="token operator">=</span> x <span class="token operator">-</span> <span class="token number">3</span> <span class="token operator">*</span> screen<span class="token punctuation">.</span>h <span class="token operator">/</span> <span class="token number">20</span> <span class="token operator">+</span> screen<span class="token punctuation">.</span>l<span class="token punctuation">;</span></span>
<span class="line">            var r1 <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">3.5</span> <span class="token operator">*</span> screen<span class="token punctuation">.</span>h <span class="token operator">/</span> <span class="token number">20</span> <span class="token operator">+</span> screen<span class="token punctuation">.</span>l<span class="token punctuation">,</span> r2 <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">*</span> screen<span class="token punctuation">.</span>h <span class="token operator">/</span> <span class="token number">20</span> <span class="token operator">+</span> screen<span class="token punctuation">.</span>l<span class="token punctuation">;</span></span>
<span class="line">            <span class="token function">Draw</span><span class="token punctuation">(</span>Sprites<span class="token punctuation">.</span>stageMiddle<span class="token punctuation">,</span> l2<span class="token punctuation">,</span> b<span class="token punctuation">,</span> l2<span class="token punctuation">,</span> t<span class="token punctuation">,</span> r2<span class="token punctuation">,</span> t<span class="token punctuation">,</span> r2<span class="token punctuation">,</span> b<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token function">Draw</span><span class="token punctuation">(</span>Sprites<span class="token punctuation">.</span>stageLeftBorder<span class="token punctuation">,</span> l1<span class="token punctuation">,</span> b<span class="token punctuation">,</span> l1<span class="token punctuation">,</span> t<span class="token punctuation">,</span> l2<span class="token punctuation">,</span> t<span class="token punctuation">,</span> l2<span class="token punctuation">,</span> b<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token function">Draw</span><span class="token punctuation">(</span>Sprites<span class="token punctuation">.</span>stageRightBorder<span class="token punctuation">,</span> r2<span class="token punctuation">,</span> b<span class="token punctuation">,</span> r2<span class="token punctuation">,</span> t<span class="token punctuation">,</span> r1<span class="token punctuation">,</span> t<span class="token punctuation">,</span> r1<span class="token punctuation">,</span> b<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">return</span> VOID<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    SonolusApi <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        FUNCBEGIN</span>
<span class="line">        <span class="token function">renderPanels</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> VOID<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,14)]))}const o=s(t,[["render",l]]),u=JSON.parse('{"path":"/sonolus.h/preview-old/3.%20stage.html","title":"舞台","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1745078694000,"contributors":[{"name":"LittleYang0531","username":"LittleYang0531","email":"“littleyang0531@outlook.com”","commits":3,"url":"https://github.com/LittleYang0531"}],"changelog":[{"hash":"cf41bee41753afa07d0ab3cd62644a45489fffce","time":1745078694000,"email":"littleyang0531@cau.edu.cn","author":"LittleYang0531","message":"Update"},{"hash":"570216e19854d31872ac0be244ab299f8df2a983","time":1745035621000,"email":"littleyang0531@cau.edu.cn","author":"LittleYang0531","message":"Update"},{"hash":"2bb0932bf53f106d48f40985e95f7580428809bf","time":1721830258000,"email":"“littleyang0531@outlook.com”","author":"LittleYang0531","message":"Update Preview Mode"}]},"filePathRelative":"sonolus.h/preview-old/3. stage.md"}');export{o as comp,u as data};

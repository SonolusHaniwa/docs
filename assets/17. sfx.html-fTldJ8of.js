import{_ as s,c as a,e as p,o as e}from"./app-bKQDLgUV.js";const t={};function c(l,n){return e(),a("div",null,n[0]||(n[0]=[p(`<h1 id="音效" tabindex="-1"><a class="header-anchor" href="#音效"><span>音效</span></a></h1><p>在本章中，您将会学习到:</p><ul><li>音效片段的声明</li><li>在 <code>Note</code> 和 <code>Stage</code> 原型中使用音效片段</li></ul><h2 id="音效片段" tabindex="-1"><a class="header-anchor" href="#音效片段"><span>音效片段</span></a></h2><p>就像皮肤精灵一样，我们需要通过引用它们的名字来声明我们想要访问的音效片段。</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="/engine/effects.cpp"><span>/engine/effects.cpp</span></div><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token keyword">class</span> <span class="token class-name">Clips</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span><span class="token operator">:</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">int</span> stage <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">int</span> perfect <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">int</span> great <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">int</span> good <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span>Clips<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">auto</span> effects <span class="token operator">=</span> defineEffects<span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token class-name">Clips</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token punctuation">{</span> EffectClipName<span class="token punctuation">.</span>Stage<span class="token punctuation">,</span> Clips<span class="token punctuation">.</span>stage <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span> EffectClipName<span class="token punctuation">.</span>Perfect<span class="token punctuation">,</span> Clips<span class="token punctuation">.</span>perfect <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span> EffectClipName<span class="token punctuation">.</span>Great<span class="token punctuation">,</span> Clips<span class="token punctuation">.</span>great <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span> EffectClipName<span class="token punctuation">.</span>Good<span class="token punctuation">,</span> Clips<span class="token punctuation">.</span>good <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p>保存后，在 <code>/effects/</code> 中放入对应的音效片段，并将其命名为对应的名称，这样在编译引擎时，Sonolus.h 会自动将音效片段打包成音效上传至服务器。</p><h2 id="音符" tabindex="-1"><a class="header-anchor" href="#音符"><span>音符</span></a></h2><p>为了为判定加上音效，我们需要检查最终判定并使用 <code>Play</code> 函数播放正确的音效片段。</p><p>注意到 <code>Play</code> 有一个 <code>distance</code> 参数，如果在指定时间 <code>distance</code> 之内音效片段已经被播放过了，Sonolus 将阻止其再次播放。这将阻止相同的片段在短时间内连续播放并对玩家造成影响。总的来说，<code>0.02</code>(20 毫秒) 是一个很好的值。</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="/engine/play/Note.cpp"><span>/engine/play/Note.cpp</span></div><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token keyword">class</span> <span class="token class-name">Note</span><span class="token operator">:</span> <span class="token base-clause"><span class="token keyword">public</span> <span class="token class-name">Archetype</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line">    SonolusApi <span class="token function">touch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        FUNCBEGIN</span>
<span class="line">        <span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line">        <span class="token function">FOR</span> <span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> touches<span class="token punctuation">.</span>size<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line">            <span class="token function">Switch</span><span class="token punctuation">(</span>EntityInput<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token punctuation">{</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token function">Play</span><span class="token punctuation">(</span>Clips<span class="token punctuation">.</span>perfect<span class="token punctuation">,</span> <span class="token number">0.02</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token punctuation">{</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token function">Play</span><span class="token punctuation">(</span>Clips<span class="token punctuation">.</span>great<span class="token punctuation">,</span> <span class="token number">0.02</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token punctuation">{</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token function">Play</span><span class="token punctuation">(</span>Clips<span class="token punctuation">.</span>good<span class="token punctuation">,</span> <span class="token number">0.02</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">            <span class="token comment">// ...</span></span>
<span class="line">        <span class="token punctuation">}</span> DONE</span>
<span class="line">        <span class="token keyword">return</span> VOID<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="舞台" tabindex="-1"><a class="header-anchor" href="#舞台"><span>舞台</span></a></h2><p>由于我们已经有了判定线来响应击打，播放其音效也是很有意义的。</p><p>然而，如果一个触摸已经被音符使用过了，我们就不应该播放舞台音效。</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="/engine/play/Stage.cpp"><span>/engine/play/Stage.cpp</span></div><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token keyword">class</span> <span class="token class-name">Stage</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">int</span> touchOrder <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line">    SonolusApi <span class="token function">touch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        FUNCBEGIN</span>
<span class="line">        <span class="token function">FOR</span> <span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> touches<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">IF</span> <span class="token punctuation">(</span><span class="token operator">!</span>touches<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>started<span class="token punctuation">)</span> CONTINUE<span class="token punctuation">;</span> FI</span>
<span class="line">            <span class="token function">IF</span> <span class="token punctuation">(</span><span class="token function">isUsed</span><span class="token punctuation">(</span>touches<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> CONTINUE<span class="token punctuation">;</span> FI</span>
<span class="line">            <span class="token function">Play</span><span class="token punctuation">(</span>Clips<span class="token punctuation">.</span>stage<span class="token punctuation">,</span> <span class="token number">0.02</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token function">Return</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> DONE</span>
<span class="line">        <span class="token keyword">return</span> VOID<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,15)]))}const o=s(t,[["render",c]]),u=JSON.parse('{"path":"/sonolus.h/play-old/17.%20sfx.html","title":"音效","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1745078694000,"contributors":[{"name":"LittleYang0531","username":"LittleYang0531","email":"“littleyang0531@outlook.com”","commits":3,"url":"https://github.com/LittleYang0531"}],"changelog":[{"hash":"cf41bee41753afa07d0ab3cd62644a45489fffce","time":1745078694000,"email":"littleyang0531@cau.edu.cn","author":"LittleYang0531","message":"Update"},{"hash":"307d2a220f7bba82bd2e711c214715b8253a1908","time":1720416884000,"email":"“littleyang0531@outlook.com”","author":"LittleYang0531","message":"Add tutorial 01"},{"hash":"7f13429673ffc5b1dca011868f671ca020b42e65","time":1720364737000,"email":"“littleyang0531@outlook.com”","author":"LittleYang0531","message":"Update"}]},"filePathRelative":"sonolus.h/play-old/17. sfx.md"}');export{o as comp,u as data};

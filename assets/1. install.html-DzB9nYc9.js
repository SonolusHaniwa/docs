import{_ as l,c as t,e,a as i,d as a,b as o,w as p,r,o as c}from"./app-SvzghQPM.js";const d={};function u(m,s){const n=r("RouteLink");return c(),t("div",null,[s[3]||(s[3]=e(`<h1 id="搭建开发环境" tabindex="-1"><a class="header-anchor" href="#搭建开发环境"><span>搭建开发环境</span></a></h1><p>在本章中，您将会学习到:</p><ul><li>如何搭建 Sonolus.h 的开发环境</li><li>利用 Sonolus Server 创建一个新项目</li><li>使用 Sonolus Server 启动临时开发服务器</li></ul><h2 id="安装-sonolus-server" tabindex="-1"><a class="header-anchor" href="#安装-sonolus-server"><span>安装 Sonolus Server</span></a></h2><p>请前往 <a href="https://github.com/SonolusHaniwa/sonolus-server-cpp/releases/latest" target="_blank" rel="noopener noreferrer">https://github.com/SonolusHaniwa/sonolus-server-cpp/releases/latest</a> 下载对应系统版本的 Sonolus Server 预编译压缩包。</p><p>如果您使用的是 Linux 系统，您可能需要提前安装以下依赖库</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 对于 Ubuntu 操作系统:</span></span>
<span class="line"><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> g++ libjsoncpp-dev libmysqlclient-dev libssl-dev libsqlite3-dev libcurl4 libzip-dev <span class="token parameter variable">-y</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,7)),i("p",null,[s[1]||(s[1]=a("如果您不放心我们发布的预编译压缩包，你可以根据 ")),o(n,{to:"/sonolus-server/2.%20install.html#%E5%AE%89%E8%A3%85%E6%9C%8D%E5%8A%A1"},{default:p(()=>s[0]||(s[0]=[a("安装服务")])),_:1}),s[2]||(s[2]=a(" 里的内容自行手动编译"))]),s[4]||(s[4]=e(`<p>后续章节在输入指令时，如果没有特别提及，默认都是在 <strong>Sonolus Server 的解压根目录下</strong> 运行。</p><h2 id="初始化项目" tabindex="-1"><a class="header-anchor" href="#初始化项目"><span>初始化项目</span></a></h2><p>输入以下指令来创建一个新项目:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">./sonolus initcpp <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果后续 Sonolus.h 发布了新版本，你可以使用以下指令来更新您的项目:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">./sonolus synccpp</span>
<span class="line">./sonolus updatecpp <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="启动开发服务器" tabindex="-1"><a class="header-anchor" href="#启动开发服务器"><span>启动开发服务器</span></a></h2><p>输入以下指令来直接启动开发服务器:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">./sonolus serve</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果您需要编译指定模式的引擎，您可以输入以下指令之一来编译引擎并启动开发服务器:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">./sonolus buildcpp play <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span> <span class="token comment"># 编译 EnginePlayData</span></span>
<span class="line">./sonolus buildcpp tutorial <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span> <span class="token comment"># 编译 EngineTutorialData</span></span>
<span class="line">./sonolus buildcpp preview <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span> <span class="token comment"># 编译 EnginePreviewData</span></span>
<span class="line">./sonolus buildcpp <span class="token function">watch</span> <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span> <span class="token comment"># 编译 EngineWatchData</span></span>
<span class="line">./sonolus buildcpp all <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span> <span class="token comment"># 编译所有模式的引擎</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上指令在生成对应数据文件的同时，还会生成一个对应配置文件。</p><p>编译完后，会自动启动开发服务器用以测试。</p><p>在本教程中，您将会从零开始学习到如何编写一个完整的单轨点击式节奏游戏引擎。</p>`,14))])}const b=l(d,[["render",u]]),v=JSON.parse('{"path":"/sonolus.h/basic/1.%20install.html","title":"搭建开发环境","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1745035621000,"contributors":[{"name":"LittleYang0531","username":"LittleYang0531","email":"“littleyang0531@outlook.com”","commits":3,"url":"https://github.com/LittleYang0531"}],"changelog":[{"hash":"570216e19854d31872ac0be244ab299f8df2a983","time":1745035621000,"email":"littleyang0531@cau.edu.cn","author":"LittleYang0531","message":"Update"},{"hash":"bb421886456aeed8e99566d85bb38583f372bfdb","time":1720104934000,"email":"“littleyang0531@outlook.com”","author":"LittleYang0531","message":"Update"},{"hash":"980b354af52a1502b438a4a9259778bf62735c06","time":1720016854000,"email":"“littleyang0531@outlook.com”","author":"LittleYang0531","message":"Update"}]},"filePathRelative":"sonolus.h/basic/1. install.md"}');export{b as comp,v as data};

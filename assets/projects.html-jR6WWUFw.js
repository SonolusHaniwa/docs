import{_ as n,c as a,e,o as p}from"./app-BEAdBfBr.js";const t={};function o(l,s){return p(),a("div",null,s[0]||(s[0]=[e(`<h1 id="project" tabindex="-1"><a class="header-anchor" href="#project"><span>Project</span></a></h1><h2 id="package-json" tabindex="-1"><a class="header-anchor" href="#package-json"><span><code>package<span class="token punctuation">.</span>json</code></span></a></h2><p>Project details are defined in a file called <code>package<span class="token punctuation">.</span>json</code> in the root directory of project. You need to create it by yourself:</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code class="language-json"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;skin&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;demo_skin&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;i18n&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">            <span class="token punctuation">{</span></span>
<span class="line">                <span class="token property">&quot;localization&quot;</span><span class="token operator">:</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Demo Skin&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;subtitle&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Demo Skin&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;author#1000&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Version: 1.0.0&quot;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;effect&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;demo_effect&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;i18n&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">            <span class="token punctuation">{</span></span>
<span class="line">                <span class="token property">&quot;localization&quot;</span><span class="token operator">:</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Demo Effect&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;subtitle&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Demo Effect&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;author#1000&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Version: 1.0.0&quot;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;engine&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;demo_engine&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;i18n&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">            <span class="token punctuation">{</span></span>
<span class="line">                <span class="token property">&quot;localization&quot;</span><span class="token operator">:</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Demo Engine&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;subtitle&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Demo Engine&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;author#1000&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;skin&quot;</span><span class="token operator">:</span> <span class="token string">&quot;demo_skin&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;background&quot;</span><span class="token operator">:</span> <span class="token string">&quot;default-background&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;effect&quot;</span><span class="token operator">:</span> <span class="token string">&quot;demo_effect&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;particle&quot;</span><span class="token operator">:</span> <span class="token string">&quot;particle&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Version: 1.0.0&quot;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;level&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;generate&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;i18n&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">            <span class="token punctuation">{</span></span>
<span class="line">                <span class="token property">&quot;localization&quot;</span><span class="token operator">:</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Demo Level&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;rating&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;artists&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;author&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;engine&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;skin&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;background&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;effect&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;particle&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If skin name, effect name or level name is empty, it will not be added to Sonolus Server.</p><p>The value of <code>skin</code>, <code>background</code>, <code>effect</code> and <code>particle</code> in <code>engine<span class="token punctuation">.</span>i18n</code> must be existed in Sonolus Server, otherwise libsonolush will not add your engine to Sonolus Server.</p><p>If the value of <code>skin</code>, <code>background</code>, <code>effect</code> and <code>particle</code> in <code>level<span class="token punctuation">.</span>i18n</code> is empty, it means that this level uses default skin / background / effect / particle defined in <code>engine<span class="token punctuation">.</span>i18n</code>. And if the value is not empty, it must be existed in Sonolus Server.</p><p><code>level<span class="token punctuation">.</span>generate</code> should be argument values that will be given to executable file in order to generate LevelData. If this value is empty, this level also will not be added to Sonolus Server.</p><p>A typical project structure might look like this:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">demo_engine/</span>
<span class="line">    main.cpp</span>
<span class="line">    package.json</span>
<span class="line">    dist/</span>
<span class="line">        thumbnail.png</span>
<span class="line">        ...</span>
<span class="line">    sonolus/</span>
<span class="line">        sonolus.h</span>
<span class="line">    engine/</span>
<span class="line">        play/</span>
<span class="line">            ...</span>
<span class="line">        preview/</span>
<span class="line">            ...</span>
<span class="line">        tutorial/</span>
<span class="line">            ...</span>
<span class="line">        watch/</span>
<span class="line">            ...</span>
<span class="line">        engine.cpp</span>
<span class="line">    skins/</span>
<span class="line">        ...</span>
<span class="line">    effects/</span>
<span class="line">        ...</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="modes" tabindex="-1"><a class="header-anchor" href="#modes"><span>Modes</span></a></h2><p>Modes are defined by <code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span></span></code> preprocessor. The following macros is valid: <code><span class="token constant">play</span></code>, <code><span class="token constant">tutorial</span></code>, <code><span class="token constant">preview</span></code>, <code><span class="token constant">watch</span></code>.</p><p>If you are using libsonolush, modes will be defined by libsonolush automatically. You just need to add <code><span class="token operator">-</span>D</code> argument to your IDE intelliSense.</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>Please do not define modes in your code. If multiple modes were defined, compiler will fail to compiler your code and throw a large number of error messages.</p></div><p>You can use <code>defined</code> mecro to judge which mode is defined:</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token function">defined</span><span class="token punctuation">(</span><span class="token constant">play</span><span class="token punctuation">)</span></span></span></span>
<span class="line"><span class="token constant">cout</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Play mode was defined.&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token constant">endl</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">elif</span> <span class="token expression"><span class="token function">defined</span><span class="token punctuation">(</span><span class="token constant">tutorial</span><span class="token punctuation">)</span></span></span></span>
<span class="line"><span class="token constant">cout</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Tutorial mode was defined.&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token constant">endl</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">elif</span> <span class="token expression"><span class="token function">defined</span><span class="token punctuation">(</span><span class="token constant">preview</span><span class="token punctuation">)</span></span></span></span>
<span class="line"><span class="token constant">cout</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Preview mode was defined.&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token constant">endl</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">elif</span> <span class="token expression"><span class="token function">defined</span><span class="token punctuation">(</span><span class="token constant">watch</span><span class="token punctuation">)</span></span></span></span>
<span class="line"><span class="token constant">cout</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Watch mode was defined.&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token constant">endl</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can use the following code to build engine data:</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Setup Sonolus UI</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Build engine data</span></span>
<span class="line">    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">if</span> <span class="token expression"><span class="token function">defined</span><span class="token punctuation">(</span><span class="token constant">play</span><span class="token punctuation">)</span></span></span></span>
<span class="line">    <span class="token function">BuildData</span><span class="token punctuation">(</span></span>
<span class="line">        Initialization<span class="token punctuation">,</span></span>
<span class="line">        Stage<span class="token punctuation">,</span></span>
<span class="line">        Note<span class="token punctuation">,</span></span>
<span class="line">        Archetype1</span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">elif</span> <span class="token expression"><span class="token function">defined</span><span class="token punctuation">(</span><span class="token constant">tutorial</span><span class="token punctuation">)</span></span></span></span>
<span class="line">    <span class="token function">BuildData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">elif</span> <span class="token expression"><span class="token function">defined</span><span class="token punctuation">(</span><span class="token constant">preview</span><span class="token punctuation">)</span></span></span></span>
<span class="line">    <span class="token function">BuildData</span><span class="token punctuation">(</span></span>
<span class="line">        Initialization<span class="token punctuation">,</span></span>
<span class="line">        Stage<span class="token punctuation">,</span></span>
<span class="line">        Note<span class="token punctuation">,</span></span>
<span class="line">        Archetype2</span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">elif</span> <span class="token expression"><span class="token function">defined</span><span class="token punctuation">(</span><span class="token constant">watch</span><span class="token punctuation">)</span></span></span></span>
<span class="line">    <span class="token function">BuildData</span><span class="token punctuation">(</span></span>
<span class="line">        Initialization<span class="token punctuation">,</span></span>
<span class="line">        Stage<span class="token punctuation">,</span></span>
<span class="line">        Note<span class="token punctuation">,</span></span>
<span class="line">        Archetype3</span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Pack skin &amp; effect</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="resources" tabindex="-1"><a class="header-anchor" href="#resources"><span>Resources</span></a></h2><p>You need to provide a thumbnail picture named <code>thumbnail<span class="token punctuation">.</span>png</code> in <code>dist<span class="token operator">/</span></code> directory. This picture will be used as cover of your engine, skin and effect.</p>`,20)]))}const c=n(t,[["render",o]]),u=JSON.parse('{"path":"/sonolus.h-en/basics/projects.html","title":"Project","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1749482336000,"contributors":[{"name":"LittleYang0531","username":"LittleYang0531","email":"littleyang0531@cau.edu.cn","commits":2,"url":"https://github.com/LittleYang0531"}],"changelog":[{"hash":"8aee243a9c8f201e7149e2aac9a391804d10ed74","time":1749482336000,"email":"littleyang0531@cau.edu.cn","author":"LittleYang0531","message":"Update"},{"hash":"79da61286b4f0aed95b31fbedf2a0dee93419090","time":1749307539000,"email":"littleyang0531@cau.edu.cn","author":"LittleYang0531","message":"Update Sonolus.h(English)"}]},"filePathRelative":"sonolus.h-en/basics/projects.md"}');export{c as comp,u as data};

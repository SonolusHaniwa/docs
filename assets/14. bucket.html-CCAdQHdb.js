import{_ as s,c as a,e as p,o as e}from"./app-SvzghQPM.js";const t={};function l(c,n){return e(),a("div",null,n[0]||(n[0]=[p(`<h1 id="输入桶" tabindex="-1"><a class="header-anchor" href="#输入桶"><span>输入桶</span></a></h1><p>在本章中，您将会学习到:</p><ul><li>什么是输入桶</li><li>如何设置一个输入桶</li><li>如何使用输入桶</li></ul><h2 id="输入桶-1" tabindex="-1"><a class="header-anchor" href="#输入桶-1"><span>输入桶</span></a></h2><p>输入桶是一种按键种类，按键可以将判定差值输入进去，并在结果界面对每一个输入桶显示一个分布图。</p><p>虽然那并不必要，但对于那些基于它们的准度来测定他们的输入偏移并提升自我的玩家是很有用的，</p><h2 id="设置桶" tabindex="-1"><a class="header-anchor" href="#设置桶"><span>设置桶</span></a></h2><p>我们的引擎只有一种按键，因此我们只有一种桶需要设置。</p><p>在结果界面，每个桶都是由皮肤精灵所组成的图像来表示的，因此我们应该尽可能让其与游戏中保持一致。让我们使用毫秒来作为我们的单位。</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="/engine/buckets.cpp"><span>/engine/buckets.cpp</span></div><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Buckets</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span><span class="token operator">:</span></span>
<span class="line">	</span>
<span class="line">    <span class="token keyword">int</span> note <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span>Buckets<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">auto</span> bucket <span class="token operator">=</span> defineBuckets<span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token class-name">Buckets</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">		sprites<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token punctuation">{</span></span>
<span class="line">				id<span class="token operator">:</span> Sprites<span class="token punctuation">.</span>note<span class="token punctuation">,</span></span>
<span class="line">				x<span class="token operator">:</span> <span class="token number">0.0</span><span class="token punctuation">,</span></span>
<span class="line">				y<span class="token operator">:</span> <span class="token number">0.0</span><span class="token punctuation">,</span></span>
<span class="line">				w<span class="token operator">:</span> <span class="token number">2.0</span><span class="token punctuation">,</span></span>
<span class="line">				h<span class="token operator">:</span> <span class="token number">2.0</span><span class="token punctuation">,</span></span>
<span class="line">				rotation<span class="token operator">:</span> <span class="token number">0</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">		unit<span class="token operator">:</span> UnitText<span class="token punctuation">.</span>Millisecond</span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="设置桶窗口" tabindex="-1"><a class="header-anchor" href="#设置桶窗口"><span>设置桶窗口</span></a></h2><p>接下来，我们需要设置桶窗口。</p><p>直白来说，我们需要在 <code>Note</code> 原型的 <code>preprocess</code> 回调函数中编写设置桶窗口的代码，然而有一个问题: <code>preprocess</code> 回调函数将会在每个按键实体都执行一遍，但桶窗口只需要设置一次。</p><p>因此，我们可以将我们的代码放在 <code>Initialization</code> 原型的 <code>preprocess</code> 回调函数中:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="/engine/play/Initialization.cpp"><span>/engine/play/Initialization.cpp</span></div><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Initialization</span><span class="token operator">:</span> <span class="token base-clause"><span class="token keyword">public</span> <span class="token class-name">Archetype</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line">    SonolusApi <span class="token function">preprocess</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        FUNCBEGIN</span>
<span class="line">        <span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line">        buckets<span class="token punctuation">[</span>Buckets<span class="token punctuation">.</span>note<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span></span>
<span class="line">            window<span class="token punctuation">.</span>minPerfect <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">,</span> window<span class="token punctuation">.</span>maxPerfect <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">,</span></span>
<span class="line">            window<span class="token punctuation">.</span>minGreat <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">,</span> window<span class="token punctuation">.</span>maxGreat <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">,</span></span>
<span class="line">            window<span class="token punctuation">.</span>minGood <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">,</span> window<span class="token punctuation">.</span>maxGood <span class="token operator">*</span> <span class="token number">1000</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> VOID<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span>  </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="输入结果" tabindex="-1"><a class="header-anchor" href="#输入结果"><span>输入结果</span></a></h2><p>最后，让我们设置输入结果的桶编号与它的值:</p><div class="code-block-with-title"><div class="code-block-title-bar" data-title="/engine/play/Note.cpp"><span>/engine/play/Note.cpp</span></div><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Note</span><span class="token operator">:</span> <span class="token base-clause"><span class="token keyword">public</span> <span class="token class-name">Archetype</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line">    SonolusApi <span class="token function">touch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        FUNCBEGIN</span>
<span class="line">        <span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line">        <span class="token function">FOR</span> <span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> touches<span class="token punctuation">.</span>size<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line">            EntityInput<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> Buckets<span class="token punctuation">.</span>note<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            EntityInput<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> EntityInput<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">            <span class="token comment">// ...</span></span>
<span class="line">        <span class="token punctuation">}</span> DONE</span>
<span class="line">        <span class="token keyword">return</span> VOID<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div>`,18)]))}const o=s(t,[["render",l]]),u=JSON.parse('{"path":"/sonolus.h/play/14.%20bucket.html","title":"输入桶","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1720278408000,"contributors":[{"name":"LittleYang0531","username":"LittleYang0531","email":"“littleyang0531@outlook.com”","commits":1,"url":"https://github.com/LittleYang0531"}],"changelog":[{"hash":"132936bd91a9dc146e5935cb598d680e28d5f145","time":1720278408000,"email":"“littleyang0531@outlook.com”","author":"LittleYang0531","message":"Update"}]},"filePathRelative":"sonolus.h/play/14. bucket.md"}');export{o as comp,u as data};

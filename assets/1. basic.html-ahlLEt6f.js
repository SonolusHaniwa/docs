import{_ as i,c as o,e as p,a as t,d as a,b as e,w as l,r,o as d}from"./app-BZc_moQw.js";const u={};function y(g,n){const s=r("RouteLink");return d(),o("div",null,[n[387]||(n[387]=p(`<h1 id="游玩模式基础" tabindex="-1"><a class="header-anchor" href="#游玩模式基础"><span>游玩模式基础</span></a></h1><h2 id="相关概念" tabindex="-1"><a class="header-anchor" href="#相关概念"><span>相关概念</span></a></h2><p>游玩模式，顾名思义，就是可供玩家游玩的模式。</p><p>您可以使用以下指令来编译引擎的游玩模式:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">./sonolus</span> <span class="token function">buildcpp</span> <span class="token function">play</span> <span class="token operator">&lt;</span>name<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="原型回调函数" tabindex="-1"><a class="header-anchor" href="#原型回调函数"><span>原型回调函数</span></a></h2><h3 id="原型定义" tabindex="-1"><a class="header-anchor" href="#原型定义"><span>原型定义</span></a></h3>`,7)),t("p",null,[n[1]||(n[1]=a("名为 ",-1)),n[2]||(n[2]=t("code",null,"*Order",-1)),n[3]||(n[3]=a(" 的 ",-1)),n[4]||(n[4]=t("code",null,"double",-1)),n[5]||(n[5]=a(" 型变量和返回值类型为 ",-1)),n[6]||(n[6]=t("code",null,"SonolusApi",-1)),n[7]||(n[7]=a(" 的函数已在 ",-1)),e(s,{to:"/sonolus.h/basic/2.%20sonolus.html"},{default:l(()=>n[0]||(n[0]=[a("Sonolus 基础",-1)])),_:1,__:[0]}),n[8]||(n[8]=a(" 章节中讲解。以下代码中尾部含有注释的行以及 ",-1)),n[9]||(n[9]=t("code",null,"*Order",-1)),n[10]||(n[10]=a(" 变量和 ",-1)),n[11]||(n[11]=t("code",null,"SonolusApi",-1)),n[12]||(n[12]=a(" 函数是您需要特别注意的，除此之外的行您不需要了解，Sonolus.h 会自动处理他们。",-1))]),n[388]||(n[388]=p(`<div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token keyword">class</span> <span class="token class-name">Archetype</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span><span class="token operator">:</span></span>
<span class="line">    <span class="token keyword">int</span> id <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    VariablesArray<span class="token operator">&lt;</span>EntityMemoryId<span class="token operator">&gt;</span> <span class="token operator">&amp;</span>memory <span class="token operator">=</span> EntityMemory<span class="token punctuation">;</span>                      <span class="token comment">// 实体内存区块，使用 memory[i] 获取偏移为 i 的值。</span></span>
<span class="line">    VariablesArray<span class="token operator">&lt;</span>EntitySharedMemoryId<span class="token operator">&gt;</span> <span class="token operator">&amp;</span>sharedMemory <span class="token operator">=</span> <span class="token constant">EntitySharedMemory</span><span class="token punctuation">;</span>    <span class="token comment">// 共享实体内存区块，使用 sharedMemory[i] 获取偏移为 i 的值。</span></span>
<span class="line">    EntityInfoGroup <span class="token operator">&amp;</span>info <span class="token operator">=</span> EntityInfo<span class="token punctuation">;</span>                                         <span class="token comment">// 实体信息区块。</span></span>
<span class="line">    EntityDespawnGroup <span class="token operator">&amp;</span>despawn <span class="token operator">=</span> EntityDespawn<span class="token punctuation">;</span>                                <span class="token comment">// 销毁实体区块，使用 despawn.despawn = 1 销毁实体。</span></span>
<span class="line">    EntityInputGroup <span class="token operator">&amp;</span>input <span class="token operator">=</span> EntityInput<span class="token punctuation">;</span>                                      <span class="token comment">// 实体结果区块。</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span><span class="token operator">:</span></span>
<span class="line">    ArchetypeLifeGroup life <span class="token operator">=</span> ArchetypeLife<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">;</span>                                <span class="token comment">// 原型生命值区块，只能在 preprocess 函数中修改。</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">string</span> name <span class="token operator">=</span> <span class="token string">&quot;Default Archetype&quot;</span><span class="token punctuation">;</span>                                          <span class="token comment">// 原型名。</span></span>
<span class="line">    <span class="token keyword">bool</span> hasInput <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                                                      <span class="token comment">// 是否计入 combo。</span></span>
<span class="line">    <span class="token keyword">vector</span><span class="token operator">&lt;</span>pair<span class="token operator">&lt;</span><span class="token keyword">string</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token operator">&gt;</span> imports<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">vector</span><span class="token operator">&lt;</span><span class="token keyword">string</span><span class="token operator">&gt;</span> exports<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">double</span> preprocessOrder <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token constant">SonolusApi</span> <span class="token function">preprocess</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">double</span> spawnOrderOrder <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token constant">SonolusApi</span> <span class="token function">spawnOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">double</span> shouldSpawnOrder <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token constant">SonolusApi</span> <span class="token function">shouldSpawn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">double</span> initializeOrder <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token constant">SonolusApi</span> <span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">double</span> updateSequentialOrder <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token constant">SonolusApi</span> <span class="token function">updateSequential</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">double</span> touchOrder <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token constant">SonolusApi</span> <span class="token function">touch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">double</span> updateParallelOrder <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token constant">SonolusApi</span> <span class="token function">updateParallel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">double</span> terminateOrder <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token constant">SonolusApi</span> <span class="token function">terminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一个实体在整个生命周期中有且仅有三种状态: 未激活，已激活和已销毁。</p><h3 id="preprocess" tabindex="-1"><a class="header-anchor" href="#preprocess"><span><code>preprocess</code></span></a></h3><p><code>preprocess</code> 回调函数将在关卡初始化时执行，其目的是为了修改部分区块数据(故 <code>preprocess</code> 回调函数拥有几乎最高的读写权限)。</p><h3 id="spawnorder" tabindex="-1"><a class="header-anchor" href="#spawnorder"><span><code>spawnOrder</code></span></a></h3><p><code>spawnOrder</code> 回调函数将在关卡初始化时执行，其返回值将作为实体激活顺序。该值越小，意味着实体将会被更早激活，反之则会更晚激活。</p><p>实体激活顺序可在游戏暂停时的 <code>Spawn Queue</code> 中查看(需要在设置中开启调试模式)。</p><h3 id="shouldspawn" tabindex="-1"><a class="header-anchor" href="#shouldspawn"><span><code>shouldSpawn</code></span></a></h3><p><code>shouldSpawn</code> 回调函数将在实体未激活前的每一更新周期执行，其返回值将作为是否激活实体的依据。该值为 <code>true</code> 时，意味着实体将在该更新周期被激活，并且后续更新周期中将不再调用该回调函数，反之实体将不会在该更新周期中激活。</p><p>实体激活状态可在游戏暂停时的 <code>Spawn Queue</code> 中查看(需要在设置中开启调试模式)。</p><p>当前已激活实体可在游戏暂停时的 <code>Active Entities</code> 中查看(需要在设置中开启调试模式)。</p><h3 id="initialize" tabindex="-1"><a class="header-anchor" href="#initialize"><span><code>initialize</code></span></a></h3><p><code>initialize</code> 回调函数将在 <code>shouldSpawn</code> 返回值为 <code>true</code> 的更新周期执行，并且只会被调用一次，其目的是为了在实体激活前初始化相关变量。</p><h3 id="updatesequential" tabindex="-1"><a class="header-anchor" href="#updatesequential"><span><code>updateSequential</code></span></a></h3><p><code>updateSequential</code> 回调函数将在实体激活时的每一更新周期执行，其目的是为了顺序更新实体变量或执行相关函数。</p><h3 id="touch" tabindex="-1"><a class="header-anchor" href="#touch"><span><code>touch</code></span></a></h3><p><code>touch</code> 回调函数将在实体激活时有用户触摸的更新周期中执行，其目的是为了处理用户触摸信息。</p><p>用户触摸可在游戏暂停时的 <code>Runtime Touch Array</code> 中查看(需要在设置中开启调试模式)。</p><h3 id="updateparallel" tabindex="-1"><a class="header-anchor" href="#updateparallel"><span><code>updateParallel</code></span></a></h3><p><code>updateParallel</code> 回调函数将在实体激活时的每一更新周期执行，其目的是为了平行更新实体变量或执行相关函数。</p><p>对于引擎开发者，您应该将大量非必要代码置于该回调函数而不是 <code>updateSequential</code> 回调函数以加快 Sonolus 的运行速度，从而提高运行帧率，提升用户体验。</p><h3 id="terminate" tabindex="-1"><a class="header-anchor" href="#terminate"><span><code>terminate</code></span></a></h3><p><code>terminate</code> 回调函数将在 <code>despawn.despawn</code> 被设置为 <code>true</code> 的更新周期中执行，并且只会被调用一次，其目的是为了销毁或更新部分变量或执行部分操作。该回调函数运行完后，该实体将会被标记为已销毁。</p><h3 id="调用顺序" tabindex="-1"><a class="header-anchor" href="#调用顺序"><span>调用顺序</span></a></h3><p>除去 <code>preprocess</code>, <code>spawnOrder</code> 回调函数，剩余回调函数将按照本文介绍的顺序先后进行调用。</p><p>回调函数执行的伪代码如下(实际这并不是 Sonolus 的源代码):</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token keyword">int</span> state <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 0 为未激活, 1 为已激活, 2 为已销毁</span></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">switch</span> <span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">shouldSpawn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                state <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">updateSequential</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>touchCount<span class="token punctuation">)</span> <span class="token function">touch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token function">updateParallel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">terminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="样例" tabindex="-1"><a class="header-anchor" href="#样例"><span>样例</span></a></h3><p>以下代码展示了原型的基本定义及使用方法。</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token keyword">class</span> <span class="token class-name">Test</span><span class="token operator">:</span> <span class="token base-clause"><span class="token keyword">public</span> <span class="token class-name">Archetype</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">public</span><span class="token operator">:</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">string</span> name <span class="token operator">=</span> <span class="token string">&quot;Test Archetype&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 原型名定义。</span></span>
<span class="line">    <span class="token keyword">bool</span> hasInput <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>           <span class="token comment">// 是否计入 combo</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 定义实体数据</span></span>
<span class="line">    <span class="token function">defineImportDetailed</span><span class="token punctuation">(</span>beat<span class="token punctuation">,</span> EngineArchetypeDataName<span class="token punctuation">.</span>Beat<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">defineImport</span><span class="token punctuation">(</span>lane<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 定义导出数据</span></span>
<span class="line">    <span class="token function">defineExport</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">defineExportDetailed</span><span class="token punctuation">(</span>accuracy<span class="token punctuation">,</span> EngineArchetypeDataName<span class="token punctuation">.</span>Accuracy<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 定义原型内全局变量</span></span>
<span class="line">    <span class="token keyword">var</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 定义实体共享变量</span></span>
<span class="line">    <span class="token keyword">var</span> d <span class="token operator">=</span> <span class="token keyword">var</span><span class="token punctuation">(</span>EntitySharedMemoryId<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token keyword">var</span><span class="token punctuation">(</span>EntitySharedMemoryId<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">double</span> preprocessOrder <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 定义回调函数顺序</span></span>
<span class="line">    <span class="token constant">SonolusApi</span> <span class="token function">preprocess</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   <span class="token comment">// 回调函数</span></span>
<span class="line">        <span class="token comment">// 使用实体数据</span></span>
<span class="line">        <span class="token keyword">var</span> f <span class="token operator">=</span> beat <span class="token operator">*</span> lane<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">var</span> g <span class="token operator">=</span> beat <span class="token operator">/</span> lane<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 当然也可以不指定回调函数顺序，其值默认为 0</span></span>
<span class="line">    <span class="token constant">SonolusApi</span> <span class="token function">updateSequential</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 回调函数</span></span>
<span class="line">        <span class="token comment">// 导出实体数据</span></span>
<span class="line">        <span class="token keyword">var</span> f <span class="token operator">=</span> beat <span class="token operator">*</span> lane<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">var</span> g <span class="token operator">=</span> beat <span class="token operator">/</span> lane<span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">ExportValue</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> f<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">ExportValue</span><span class="token punctuation">(</span>accuracy<span class="token punctuation">,</span> g<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这只是一个最简单的原型样例，之后您将会逐步学习多个复杂原型及一个完整引擎的编写过程。</p><h2 id="区块" tabindex="-1"><a class="header-anchor" href="#区块"><span>区块</span></a></h2><p>区块相关知识已于前序章节讲解，在此不多赘述。</p><p>有链接指向的区块表明为之前介绍过的较重要的区块，您可以点击链接快速跳转到对应界面；没有链接指向的区块表明为不太重要的区块，您可以不用了解。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>由于 Sonolus 版本更新，本页读写权限表未必为最新版本。如果本页内容与官网内容有所出入，请以<a href="https://wiki.sonolus.com/engine-specs/play-blocks/overview" target="_blank" rel="noopener noreferrer">官网</a>为准。</p></div><h3 id="读取权限表" tabindex="-1"><a class="header-anchor" href="#读取权限表"><span>读取权限表</span></a></h3>`,36)),t("table",null,[n[199]||(n[199]=t("thead",null,[t("tr",null,[t("th",null,"区块名"),t("th",{style:{"text-align":"center"}},[t("a",{href:"#preprocess"},[t("code",null,"preprocess")])]),t("th",{style:{"text-align":"center"}},[t("a",{href:"#spawnorder"},[t("code",null,"spawnOrder")])]),t("th",{style:{"text-align":"center"}},[t("a",{href:"#shouldspawn"},[t("code",null,"shouldSpawn")])]),t("th",{style:{"text-align":"center"}},[t("a",{href:"#initialize"},[t("code",null,"initialize")])]),t("th",{style:{"text-align":"center"}},[t("a",{href:"#updatesequential"},[t("code",null,"updateSequential")])]),t("th",{style:{"text-align":"center"}},[t("a",{href:"#touch"},[t("code",null,"touch")])]),t("th",{style:{"text-align":"center"}},[t("a",{href:"#updateparallel"},[t("code",null,"updateParallel")])]),t("th",{style:{"text-align":"center"}},[t("a",{href:"#terminate"},[t("code",null,"terminate")])])])],-1)),t("tbody",null,[t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#runtimeenvironment"},{default:l(()=>n[13]||(n[13]=[t("code",null,"RuntimeEnvironment",-1)])),_:1,__:[13]})]),n[14]||(n[14]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[15]||(n[15]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[16]||(n[16]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[17]||(n[17]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[18]||(n[18]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[19]||(n[19]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[20]||(n[20]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[21]||(n[21]=t("td",{style:{"text-align":"center"}},"✔",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#runtimeupdate"},{default:l(()=>n[22]||(n[22]=[t("code",null,"RuntimeUpdate",-1)])),_:1,__:[22]})]),n[23]||(n[23]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[24]||(n[24]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[25]||(n[25]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[26]||(n[26]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[27]||(n[27]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[28]||(n[28]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[29]||(n[29]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[30]||(n[30]=t("td",{style:{"text-align":"center"}},"✔",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#runtimetoucharray"},{default:l(()=>n[31]||(n[31]=[t("code",null,"RuntimeTouchArray",-1)])),_:1,__:[31]})]),n[32]||(n[32]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[33]||(n[33]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[34]||(n[34]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[35]||(n[35]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[36]||(n[36]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[37]||(n[37]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[38]||(n[38]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[39]||(n[39]=t("td",{style:{"text-align":"center"}},"✔",-1))]),n[193]||(n[193]=t("tr",null,[t("td",null,[t("code",null,"RuntimeSkinTransform")]),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔")],-1)),n[194]||(n[194]=t("tr",null,[t("td",null,[t("code",null,"RuntimeParticleTransform")]),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔")],-1)),n[195]||(n[195]=t("tr",null,[t("td",null,[t("code",null,"RuntimeBackground")]),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔")],-1)),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#runtimeui"},{default:l(()=>n[40]||(n[40]=[t("code",null,"RuntimeUI",-1)])),_:1,__:[40]})]),n[41]||(n[41]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[42]||(n[42]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[43]||(n[43]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[44]||(n[44]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[45]||(n[45]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[46]||(n[46]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[47]||(n[47]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[48]||(n[48]=t("td",{style:{"text-align":"center"}},"✔",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#runtimeuiconfiguration"},{default:l(()=>n[49]||(n[49]=[t("code",null,"RuntimeUIConfiguration",-1)])),_:1,__:[49]})]),n[50]||(n[50]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[51]||(n[51]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[52]||(n[52]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[53]||(n[53]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[54]||(n[54]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[55]||(n[55]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[56]||(n[56]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[57]||(n[57]=t("td",{style:{"text-align":"center"}},"✔",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#levelmemory-tutorialmemory-previewdata"},{default:l(()=>n[58]||(n[58]=[t("code",null,"LevelMemory",-1)])),_:1,__:[58]})]),n[59]||(n[59]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[60]||(n[60]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[61]||(n[61]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[62]||(n[62]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[63]||(n[63]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[64]||(n[64]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[65]||(n[65]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[66]||(n[66]=t("td",{style:{"text-align":"center"}},"✔",-1))]),n[196]||(n[196]=t("tr",null,[t("td",null,[t("code",null,"LevelData")]),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔")],-1)),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#leveloption-previewoption"},{default:l(()=>n[67]||(n[67]=[t("code",null,"LevelOption",-1)])),_:1,__:[67]})]),n[68]||(n[68]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[69]||(n[69]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[70]||(n[70]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[71]||(n[71]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[72]||(n[72]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[73]||(n[73]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[74]||(n[74]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[75]||(n[75]=t("td",{style:{"text-align":"center"}},"✔",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#levelbucket"},{default:l(()=>n[76]||(n[76]=[t("code",null,"LevelBucket",-1)])),_:1,__:[76]})]),n[77]||(n[77]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[78]||(n[78]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[79]||(n[79]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[80]||(n[80]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[81]||(n[81]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[82]||(n[82]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[83]||(n[83]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[84]||(n[84]=t("td",{style:{"text-align":"center"}},"✔",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#levelscore"},{default:l(()=>n[85]||(n[85]=[t("code",null,"LevelScore",-1)])),_:1,__:[85]})]),n[86]||(n[86]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[87]||(n[87]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[88]||(n[88]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[89]||(n[89]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[90]||(n[90]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[91]||(n[91]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[92]||(n[92]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[93]||(n[93]=t("td",{style:{"text-align":"center"}},"✔",-1))]),n[197]||(n[197]=t("tr",null,[t("td",null,[t("code",null,"LevelLife")]),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔")],-1)),n[198]||(n[198]=t("tr",null,[t("td",null,[t("code",null,"EngineRom")]),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔")],-1)),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entitymemory"},{default:l(()=>n[94]||(n[94]=[t("code",null,"EntityMemory",-1)])),_:1,__:[94]})]),n[95]||(n[95]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[96]||(n[96]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[97]||(n[97]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[98]||(n[98]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[99]||(n[99]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[100]||(n[100]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[101]||(n[101]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[102]||(n[102]=t("td",{style:{"text-align":"center"}},"✔",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entitydata"},{default:l(()=>n[103]||(n[103]=[t("code",null,"EntityData",-1)])),_:1,__:[103]})]),n[104]||(n[104]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[105]||(n[105]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[106]||(n[106]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[107]||(n[107]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[108]||(n[108]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[109]||(n[109]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[110]||(n[110]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[111]||(n[111]=t("td",{style:{"text-align":"center"}},"✔",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entitysharedmemory"},{default:l(()=>n[112]||(n[112]=[t("code",null,"EntitySharedMemory",-1)])),_:1,__:[112]})]),n[113]||(n[113]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[114]||(n[114]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[115]||(n[115]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[116]||(n[116]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[117]||(n[117]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[118]||(n[118]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[119]||(n[119]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[120]||(n[120]=t("td",{style:{"text-align":"center"}},"✔",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entityinfo"},{default:l(()=>n[121]||(n[121]=[t("code",null,"EntityInfo",-1)])),_:1,__:[121]})]),n[122]||(n[122]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[123]||(n[123]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[124]||(n[124]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[125]||(n[125]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[126]||(n[126]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[127]||(n[127]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[128]||(n[128]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[129]||(n[129]=t("td",{style:{"text-align":"center"}},"✔",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entitydespawn"},{default:l(()=>n[130]||(n[130]=[t("code",null,"EntityDespawn",-1)])),_:1,__:[130]})]),n[131]||(n[131]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[132]||(n[132]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[133]||(n[133]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[134]||(n[134]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[135]||(n[135]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[136]||(n[136]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[137]||(n[137]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[138]||(n[138]=t("td",{style:{"text-align":"center"}},"✔",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entityinput"},{default:l(()=>n[139]||(n[139]=[t("code",null,"EntityInput",-1)])),_:1,__:[139]})]),n[140]||(n[140]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[141]||(n[141]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[142]||(n[142]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[143]||(n[143]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[144]||(n[144]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[145]||(n[145]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[146]||(n[146]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[147]||(n[147]=t("td",{style:{"text-align":"center"}},"✔",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entitydataarray"},{default:l(()=>n[148]||(n[148]=[t("code",null,"EntityDataArray",-1)])),_:1,__:[148]})]),n[149]||(n[149]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[150]||(n[150]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[151]||(n[151]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[152]||(n[152]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[153]||(n[153]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[154]||(n[154]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[155]||(n[155]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[156]||(n[156]=t("td",{style:{"text-align":"center"}},"✔",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entitysharedmemoryarray"},{default:l(()=>n[157]||(n[157]=[t("code",null,"EntitySharedMemoryArray",-1)])),_:1,__:[157]})]),n[158]||(n[158]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[159]||(n[159]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[160]||(n[160]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[161]||(n[161]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[162]||(n[162]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[163]||(n[163]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[164]||(n[164]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[165]||(n[165]=t("td",{style:{"text-align":"center"}},"✔",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entityinfoarray"},{default:l(()=>n[166]||(n[166]=[t("code",null,"EntityInfoArray",-1)])),_:1,__:[166]})]),n[167]||(n[167]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[168]||(n[168]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[169]||(n[169]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[170]||(n[170]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[171]||(n[171]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[172]||(n[172]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[173]||(n[173]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[174]||(n[174]=t("td",{style:{"text-align":"center"}},"✔",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#archetypelife"},{default:l(()=>n[175]||(n[175]=[t("code",null,"ArchetypeLife",-1)])),_:1,__:[175]})]),n[176]||(n[176]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[177]||(n[177]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[178]||(n[178]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[179]||(n[179]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[180]||(n[180]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[181]||(n[181]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[182]||(n[182]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[183]||(n[183]=t("td",{style:{"text-align":"center"}},"✔",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#temporarymemory"},{default:l(()=>n[184]||(n[184]=[t("code",null,"TemporaryMemory",-1)])),_:1,__:[184]})]),n[185]||(n[185]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[186]||(n[186]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[187]||(n[187]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[188]||(n[188]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[189]||(n[189]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[190]||(n[190]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[191]||(n[191]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[192]||(n[192]=t("td",{style:{"text-align":"center"}},"✔",-1))])])]),n[389]||(n[389]=t("h3",{id:"修改权限表",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#修改权限表"},[t("span",null,"修改权限表")])],-1)),t("table",null,[n[386]||(n[386]=t("thead",null,[t("tr",null,[t("th",null,"区块名"),t("th",{style:{"text-align":"center"}},[t("a",{href:"#preprocess"},[t("code",null,"preprocess")])]),t("th",{style:{"text-align":"center"}},[t("a",{href:"#spawnorder"},[t("code",null,"spawnOrder")])]),t("th",{style:{"text-align":"center"}},[t("a",{href:"#shouldspawn"},[t("code",null,"shouldSpawn")])]),t("th",{style:{"text-align":"center"}},[t("a",{href:"#initialize"},[t("code",null,"initialize")])]),t("th",{style:{"text-align":"center"}},[t("a",{href:"#updatesequential"},[t("code",null,"updateSequential")])]),t("th",{style:{"text-align":"center"}},[t("a",{href:"#touch"},[t("code",null,"touch")])]),t("th",{style:{"text-align":"center"}},[t("a",{href:"#updateparallel"},[t("code",null,"updateParallel")])]),t("th",{style:{"text-align":"center"}},[t("a",{href:"#terminate"},[t("code",null,"terminate")])])])],-1)),t("tbody",null,[t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#runtimeenvironment"},{default:l(()=>n[200]||(n[200]=[t("code",null,"RuntimeEnvironment",-1)])),_:1,__:[200]})]),n[201]||(n[201]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[202]||(n[202]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[203]||(n[203]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[204]||(n[204]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[205]||(n[205]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[206]||(n[206]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[207]||(n[207]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[208]||(n[208]=t("td",{style:{"text-align":"center"}},"❌",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#runtimeupdate"},{default:l(()=>n[209]||(n[209]=[t("code",null,"RuntimeUpdate",-1)])),_:1,__:[209]})]),n[210]||(n[210]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[211]||(n[211]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[212]||(n[212]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[213]||(n[213]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[214]||(n[214]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[215]||(n[215]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[216]||(n[216]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[217]||(n[217]=t("td",{style:{"text-align":"center"}},"❌",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#runtimetoucharray"},{default:l(()=>n[218]||(n[218]=[t("code",null,"RuntimeTouchArray",-1)])),_:1,__:[218]})]),n[219]||(n[219]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[220]||(n[220]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[221]||(n[221]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[222]||(n[222]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[223]||(n[223]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[224]||(n[224]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[225]||(n[225]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[226]||(n[226]=t("td",{style:{"text-align":"center"}},"❌",-1))]),n[380]||(n[380]=t("tr",null,[t("td",null,[t("code",null,"RuntimeSkinTransform")]),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌")],-1)),n[381]||(n[381]=t("tr",null,[t("td",null,[t("code",null,"RuntimeParticleTransform")]),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌")],-1)),n[382]||(n[382]=t("tr",null,[t("td",null,[t("code",null,"RuntimeBackground")]),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌")],-1)),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#runtimeui"},{default:l(()=>n[227]||(n[227]=[t("code",null,"RuntimeUI",-1)])),_:1,__:[227]})]),n[228]||(n[228]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[229]||(n[229]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[230]||(n[230]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[231]||(n[231]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[232]||(n[232]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[233]||(n[233]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[234]||(n[234]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[235]||(n[235]=t("td",{style:{"text-align":"center"}},"❌",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#runtimeuiconfiguration"},{default:l(()=>n[236]||(n[236]=[t("code",null,"RuntimeUIConfiguration",-1)])),_:1,__:[236]})]),n[237]||(n[237]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[238]||(n[238]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[239]||(n[239]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[240]||(n[240]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[241]||(n[241]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[242]||(n[242]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[243]||(n[243]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[244]||(n[244]=t("td",{style:{"text-align":"center"}},"❌",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#levelmemory-tutorialmemory-previewdata"},{default:l(()=>n[245]||(n[245]=[t("code",null,"LevelMemory",-1)])),_:1,__:[245]})]),n[246]||(n[246]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[247]||(n[247]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[248]||(n[248]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[249]||(n[249]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[250]||(n[250]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[251]||(n[251]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[252]||(n[252]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[253]||(n[253]=t("td",{style:{"text-align":"center"}},"❌",-1))]),n[383]||(n[383]=t("tr",null,[t("td",null,[t("code",null,"LevelData")]),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌")],-1)),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#leveloption-previewoption"},{default:l(()=>n[254]||(n[254]=[t("code",null,"LevelOption",-1)])),_:1,__:[254]})]),n[255]||(n[255]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[256]||(n[256]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[257]||(n[257]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[258]||(n[258]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[259]||(n[259]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[260]||(n[260]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[261]||(n[261]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[262]||(n[262]=t("td",{style:{"text-align":"center"}},"❌",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#levelbucket"},{default:l(()=>n[263]||(n[263]=[t("code",null,"LevelBucket",-1)])),_:1,__:[263]})]),n[264]||(n[264]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[265]||(n[265]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[266]||(n[266]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[267]||(n[267]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[268]||(n[268]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[269]||(n[269]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[270]||(n[270]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[271]||(n[271]=t("td",{style:{"text-align":"center"}},"❌",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#levelscore"},{default:l(()=>n[272]||(n[272]=[t("code",null,"LevelScore",-1)])),_:1,__:[272]})]),n[273]||(n[273]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[274]||(n[274]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[275]||(n[275]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[276]||(n[276]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[277]||(n[277]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[278]||(n[278]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[279]||(n[279]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[280]||(n[280]=t("td",{style:{"text-align":"center"}},"❌",-1))]),n[384]||(n[384]=t("tr",null,[t("td",null,[t("code",null,"LevelLife")]),t("td",{style:{"text-align":"center"}},"✔"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌")],-1)),n[385]||(n[385]=t("tr",null,[t("td",null,[t("code",null,"EngineRom")]),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌"),t("td",{style:{"text-align":"center"}},"❌")],-1)),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entitymemory"},{default:l(()=>n[281]||(n[281]=[t("code",null,"EntityMemory",-1)])),_:1,__:[281]})]),n[282]||(n[282]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[283]||(n[283]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[284]||(n[284]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[285]||(n[285]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[286]||(n[286]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[287]||(n[287]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[288]||(n[288]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[289]||(n[289]=t("td",{style:{"text-align":"center"}},"✔",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entitydata"},{default:l(()=>n[290]||(n[290]=[t("code",null,"EntityData",-1)])),_:1,__:[290]})]),n[291]||(n[291]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[292]||(n[292]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[293]||(n[293]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[294]||(n[294]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[295]||(n[295]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[296]||(n[296]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[297]||(n[297]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[298]||(n[298]=t("td",{style:{"text-align":"center"}},"❌",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entitysharedmemory"},{default:l(()=>n[299]||(n[299]=[t("code",null,"EntitySharedMemory",-1)])),_:1,__:[299]})]),n[300]||(n[300]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[301]||(n[301]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[302]||(n[302]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[303]||(n[303]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[304]||(n[304]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[305]||(n[305]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[306]||(n[306]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[307]||(n[307]=t("td",{style:{"text-align":"center"}},"❌",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entityinfo"},{default:l(()=>n[308]||(n[308]=[t("code",null,"EntityInfo",-1)])),_:1,__:[308]})]),n[309]||(n[309]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[310]||(n[310]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[311]||(n[311]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[312]||(n[312]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[313]||(n[313]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[314]||(n[314]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[315]||(n[315]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[316]||(n[316]=t("td",{style:{"text-align":"center"}},"❌",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entitydespawn"},{default:l(()=>n[317]||(n[317]=[t("code",null,"EntityDespawn",-1)])),_:1,__:[317]})]),n[318]||(n[318]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[319]||(n[319]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[320]||(n[320]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[321]||(n[321]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[322]||(n[322]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[323]||(n[323]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[324]||(n[324]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[325]||(n[325]=t("td",{style:{"text-align":"center"}},"✔",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entityinput"},{default:l(()=>n[326]||(n[326]=[t("code",null,"EntityInput",-1)])),_:1,__:[326]})]),n[327]||(n[327]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[328]||(n[328]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[329]||(n[329]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[330]||(n[330]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[331]||(n[331]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[332]||(n[332]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[333]||(n[333]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[334]||(n[334]=t("td",{style:{"text-align":"center"}},"✔",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entitydataarray"},{default:l(()=>n[335]||(n[335]=[t("code",null,"EntityDataArray",-1)])),_:1,__:[335]})]),n[336]||(n[336]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[337]||(n[337]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[338]||(n[338]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[339]||(n[339]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[340]||(n[340]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[341]||(n[341]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[342]||(n[342]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[343]||(n[343]=t("td",{style:{"text-align":"center"}},"❌",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entitysharedmemoryarray"},{default:l(()=>n[344]||(n[344]=[t("code",null,"EntitySharedMemoryArray",-1)])),_:1,__:[344]})]),n[345]||(n[345]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[346]||(n[346]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[347]||(n[347]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[348]||(n[348]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[349]||(n[349]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[350]||(n[350]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[351]||(n[351]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[352]||(n[352]=t("td",{style:{"text-align":"center"}},"❌",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#entityinfoarray"},{default:l(()=>n[353]||(n[353]=[t("code",null,"EntityInfoArray",-1)])),_:1,__:[353]})]),n[354]||(n[354]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[355]||(n[355]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[356]||(n[356]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[357]||(n[357]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[358]||(n[358]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[359]||(n[359]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[360]||(n[360]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[361]||(n[361]=t("td",{style:{"text-align":"center"}},"❌",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#archetypelife"},{default:l(()=>n[362]||(n[362]=[t("code",null,"ArchetypeLife",-1)])),_:1,__:[362]})]),n[363]||(n[363]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[364]||(n[364]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[365]||(n[365]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[366]||(n[366]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[367]||(n[367]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[368]||(n[368]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[369]||(n[369]=t("td",{style:{"text-align":"center"}},"❌",-1)),n[370]||(n[370]=t("td",{style:{"text-align":"center"}},"❌",-1))]),t("tr",null,[t("td",null,[e(s,{to:"/sonolus.h/basic/2.%20sonolus.html#temporarymemory"},{default:l(()=>n[371]||(n[371]=[t("code",null,"TemporaryMemory",-1)])),_:1,__:[371]})]),n[372]||(n[372]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[373]||(n[373]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[374]||(n[374]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[375]||(n[375]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[376]||(n[376]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[377]||(n[377]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[378]||(n[378]=t("td",{style:{"text-align":"center"}},"✔",-1)),n[379]||(n[379]=t("td",{style:{"text-align":"center"}},"✔",-1))])])])])}const k=i(u,[["render",y]]),m=JSON.parse('{"path":"/sonolus.h/play/1.%20basic.html","title":"游玩模式基础","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1746345404000,"contributors":[{"name":"LittleYang0531","username":"LittleYang0531","email":"littleyang0531@cau.edu.cn","commits":3,"url":"https://github.com/LittleYang0531"}],"changelog":[{"hash":"e13903a7cea295433f4bca82cc81c410ec333e8c","time":1746345404000,"email":"littleyang0531@cau.edu.cn","author":"LittleYang0531","message":"Update"},{"hash":"dcbb26ffce1c79b5898039889207b9a274cdab0b","time":1745767057000,"email":"littleyang0531@cau.edu.cn","author":"LittleYang0531","message":"Update"},{"hash":"cf41bee41753afa07d0ab3cd62644a45489fffce","time":1745078694000,"email":"littleyang0531@cau.edu.cn","author":"LittleYang0531","message":"Update"}]},"filePathRelative":"sonolus.h/play/1. basic.md"}');export{k as comp,m as data};

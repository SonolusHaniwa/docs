import{_ as n,c as s,o as a,e as p}from"./app-B1KZEIhd.js";const e={},t=p(`<h1 id="打印时间" tabindex="-1"><a class="header-anchor" href="#打印时间"><span>打印时间</span></a></h1><p>在本章中，您将会学习到:</p><ul><li>打印函数</li><li>时间打印</li></ul><h2 id="打印" tabindex="-1"><a class="header-anchor" href="#打印"><span>打印</span></a></h2><p>即使预览模式已经工作并且我们可以看见所有音符，但对于玩家来说很容易在滚动屏幕时迷失。</p><p>这就是为什么我们在面板的每一边留下了一些空间，因此我们可以打印有用的信息，比如说时间和刻度。在接下来的章节中，我们还将使用这些空间打印 BPM 和倍速。</p><p>让我们使用一个实用函数来更简单地打印信息：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="/engine/utils.cpp"><pre><code><span class="line"><span class="token keyword">SonolusApi</span> <span class="token function">print</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token keyword">let</span> value<span class="token punctuation">,</span> </span>
<span class="line">    <span class="token keyword">let</span> time<span class="token punctuation">,</span> </span>
<span class="line">    <span class="token keyword">let</span> format<span class="token punctuation">,</span> </span>
<span class="line">    <span class="token keyword">let</span> decimalPlaces<span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">let</span> color<span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">bool</span> isLeft</span>
<span class="line"><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">FUNCBEGIN</span></span>
<span class="line">    <span class="token keyword">auto</span> pos <span class="token operator">=</span> panel<span class="token punctuation">.</span><span class="token function">getPos</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>isLeft<span class="token punctuation">)</span> pos<span class="token punctuation">.</span>first <span class="token operator">-=</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token constant">screen</span><span class="token punctuation">.</span>h <span class="token operator">/</span> <span class="token number">20</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">else</span> pos<span class="token punctuation">.</span>first <span class="token operator">+=</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token constant">screen</span><span class="token punctuation">.</span>h <span class="token operator">/</span> <span class="token number">20</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">Print</span><span class="token punctuation">(</span></span>
<span class="line">        value<span class="token punctuation">,</span> </span>
<span class="line">        format<span class="token punctuation">,</span> </span>
<span class="line">        decimalPlaces<span class="token punctuation">,</span> </span>
<span class="line">        pos<span class="token punctuation">.</span>first<span class="token punctuation">,</span> pos<span class="token punctuation">.</span>second<span class="token punctuation">,</span> </span>
<span class="line">        isLeft<span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token constant">screen</span><span class="token punctuation">.</span>h <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token constant">screen</span><span class="token punctuation">.</span>h <span class="token operator">/</span> <span class="token number">20</span><span class="token punctuation">,</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">        color<span class="token punctuation">,</span></span>
<span class="line">        <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">        isLeft <span class="token operator">?</span> <span class="token keyword">playData</span><span class="token double-colon punctuation">::</span><span class="token constant">HorizontalAlign</span><span class="token punctuation">.</span>Left <span class="token operator">:</span> <span class="token keyword">playData</span><span class="token double-colon punctuation">::</span><span class="token constant">HorizontalAlign</span><span class="token punctuation">.</span>Right<span class="token punctuation">,</span></span>
<span class="line">        <span class="token boolean">false</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token constant">VOID</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>:::</p><p>这个实用函数在特定时间简单地绘制了一个值，并提供一些选项。另外它还确保了当它过于接近屏幕的顶部和底部时，打印出的文字总是可见的。</p><h2 id="时间" tabindex="-1"><a class="header-anchor" href="#时间"><span>时间</span></a></h2><p>现在我们可以遍历持续时间，并在每一秒打印一次：</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp" data-title="/engine/preview/Stage.cpp"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Stage</span><span class="token operator">:</span> <span class="token base-clause"><span class="token keyword">public</span> <span class="token class-name">Archetype</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// ...</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">SonolusApi</span> <span class="token function">printTimes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">FUNCBEGIN</span></span>
<span class="line">        <span class="token keyword">FOR</span> <span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token function">Floor</span><span class="token punctuation">(</span>chart<span class="token punctuation">.</span>duration<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token constant">PrintFormat</span><span class="token punctuation">.</span>Time<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token constant">PrintColor</span><span class="token punctuation">.</span>Neutral<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">DONE</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token constant">VOID</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">SonolusApi</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">FUNCBEGIN</span></span>
<span class="line">        <span class="token comment">// ...</span></span>
<span class="line">        <span class="token function">printTimes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token constant">VOID</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意到我们从 1 开始而不是 0，这是因为在关卡开始会有 BPM 变化和倍速变化，我们不想遮挡它们。</p><p>尽管它可能因引擎而异，但我们经常在左边打印与时间相关的信息，在右边打印与节拍相关的信息。时间经常以中性色绘制，这样不会引起过多注意。</p>`,15),l=[t];function c(o,i){return a(),s("div",null,l)}const r=n(e,[["render",c],["__file","6. print.html.vue"]]),k=JSON.parse('{"path":"/sonolus.h/preview/6.%20print.html","title":"打印时间","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"打印","slug":"打印","link":"#打印","children":[]},{"level":2,"title":"时间","slug":"时间","link":"#时间","children":[]}],"git":{"updatedTime":1721830258000,"contributors":[{"name":"LittleYang0531","email":"“littleyang0531@outlook.com”","commits":1}]},"filePathRelative":"sonolus.h/preview/6. print.md"}');export{r as comp,k as data};

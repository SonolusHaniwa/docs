import{_ as a,c as n,e as s,o}from"./app-BZc_moQw.js";const r={};function d(t,e){return o(),n("div",null,e[0]||(e[0]=[s('<h1 id="builtins" tabindex="-1"><a class="header-anchor" href="#builtins"><span>Builtins</span></a></h1><h2 id="printstack" tabindex="-1"><a class="header-anchor" href="#printstack"><span><code>printStack()</code></span></a></h2><h2 id="sonolusassert-expr" tabindex="-1"><a class="header-anchor" href="#sonolusassert-expr"><span><code>SonolusAssert(expr, ...)</code></span></a></h2><h2 id="createnodecontainer-bool" tabindex="-1"><a class="header-anchor" href="#createnodecontainer-bool"><span><code>createNodeContainer(bool)</code></span></a></h2><h2 id="mergenodecontainer" tabindex="-1"><a class="header-anchor" href="#mergenodecontainer"><span><code>mergeNodeContainer()</code></span></a></h2><h2 id="sonolusrun-funcnode" tabindex="-1"><a class="header-anchor" href="#sonolusrun-funcnode"><span><code>SonolusRun(FuncNode)</code></span></a></h2><h2 id="sizeof-t" tabindex="-1"><a class="header-anchor" href="#sizeof-t"><span><code>SizeOf&lt;T&gt;()</code></span></a></h2><h2 id="json-library" tabindex="-1"><a class="header-anchor" href="#json-library"><span>JSON library</span></a></h2><h3 id="json-encode-json-value" tabindex="-1"><a class="header-anchor" href="#json-encode-json-value"><span><code>json_encode(Json::Value)</code></span></a></h3><h3 id="json-pretty-encode-json-value" tabindex="-1"><a class="header-anchor" href="#json-pretty-encode-json-value"><span><code>json_pretty_encode(Json::Value)</code></span></a></h3><h3 id="json-decode-string-json-value" tabindex="-1"><a class="header-anchor" href="#json-decode-string-json-value"><span><code>json_decode(string, Json::Value&amp;)</code></span></a></h3><h3 id="json-decode-string" tabindex="-1"><a class="header-anchor" href="#json-decode-string"><span><code>json_decode(string)</code></span></a></h3><h2 id="gzip-library" tabindex="-1"><a class="header-anchor" href="#gzip-library"><span>GZip library</span></a></h2><h3 id="compress-gzip-string-int" tabindex="-1"><a class="header-anchor" href="#compress-gzip-string-int"><span><code>compress_gzip(string, int)</code></span></a></h3><h3 id="compress-deflate-string-int" tabindex="-1"><a class="header-anchor" href="#compress-deflate-string-int"><span><code>compress_deflate(string, int)</code></span></a></h3><h3 id="decompress-deflate-string" tabindex="-1"><a class="header-anchor" href="#decompress-deflate-string"><span><code>decompress_deflate(string)</code></span></a></h3><h3 id="decompress-gzip-string" tabindex="-1"><a class="header-anchor" href="#decompress-gzip-string"><span><code>decompress_gzip(string)</code></span></a></h3>',17)]))}const i=a(r,[["render",d]]),h=JSON.parse('{"path":"/sonolus.h-en/api/builtin.html","title":"Builtins","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1749402357000,"contributors":[{"name":"LittleYang0531","username":"LittleYang0531","email":"littleyang0531@cau.edu.cn","commits":1,"url":"https://github.com/LittleYang0531"}],"changelog":[{"hash":"4b96feefa5aab4c70c5b9c1d39c17f58835a6a78","time":1749402357000,"email":"littleyang0531@cau.edu.cn","author":"LittleYang0531","message":"Update"}]},"filePathRelative":"sonolus.h-en/api/builtin.md"}');export{i as comp,h as data};
